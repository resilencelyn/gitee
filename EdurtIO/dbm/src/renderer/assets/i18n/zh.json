{
  "common": {
    "management": "管理",
    "datasource": "数据源",
    "add": "添加",
    "refresh": "刷新",
    "close": "关闭",
    "alias": "别名",
    "protocol": "协议",
    "host": "主机",
    "port": "端口",
    "username": "用户名",
    "password": "密码",
    "ok": "OK",
    "test": "测试",
    "action": "操作",
    "delete": "删除",
    "edit": "修改",
    "name": "名称",
    "query": "查询",
    "execute": "执行",
    "history": "历史",
    "format": "格式化",
    "cancel": "取消",
    "select": "选择",
    "quick": "Quick",
    "result": "结果",
    "editor": "编辑器",
    "id": "ID",
    "server": "服务",
    "state": "状态",
    "time": "时间",
    "start": "开始",
    "end": "结束",
    "elapsed": "消耗",
    "ddl": "DDL",
    "error": "错误",
    "database": "数据库",
    "table": "表",
    "tools": "工具",
    "system": "系统",
    "monitor": "监控",
    "language": "语言",
    "track": "Track",
    "exception": "异常",
    "stack": "Stack",
    "copy": "复制",
    "basic": "基本",
    "network": "网络",
    "timeout": "超时",
    "setting": "设置",
    "clear": "清除",
    "processor": "进程",
    "open": "开启",
    "detail": "详情",
    "active": "激活",
    "line": "行",
    "theme": "主题",
    "preview": "预览",
    "number": "数值",
    "connection": "连接",
    "metadata": "元数据",
    "disk": "磁盘",
    "info": "信息",
    "create": "创建",
    "engine": "引擎",
    "configuration": "配置",
    "previous": "上一步",
    "next": "下一步",
    "experimental": "实验性",
    "default": "默认",
    "save": "保存",
    "property": "属性",
    "atomic": "Atomic",
    "expiration": "过期",
    "lazy": "Lazy",
    "mysql": "MySQL",
    "materialized_mysql": "MaterializeMySQL",
    "github": "GitHub",
    "drop": "Drop",
    "structure": "结构",
    "log": "Log",
    "column": "列",
    "tinylog": "TinyLog",
    "stripelog": "StripeLog",
    "integration": "Integration",
    "broker": "Broker",
    "topic": "Topic",
    "group": "Group",
    "uri": "URI",
    "jdbc": "JDBC",
    "sqlite": "SQLite",
    "path": "Path",
    "odbc": "ODBC",
    "rename": "重命名",
    "truncate": "Truncate",
    "rollback": "回滚",
    "no_rollback": "无法回滚",
    "clean": "清除",
    "partition": "分区",
    "optimize": "优化",
    "final": "Final",
    "mutations": "Mutations",
    "migrte": "迁移",
    "target": "目标",
    "source": "源",
    "nullable": "空",
    "current": "当前",
    "version": "版本",
    "latest": "最新",
    "download": "下载",
    "update": "更新",
    "new": "新",
    "percentage": "进度",
    "release": "发布",
    "note": "日志",
    "type": "类型",
    "rowDelimiter": "Row Delimiter",
    "optional": "可选",
    "schema": "Schema",
    "numOfConsumer": "Number Of Consumer",
    "maxBlockSize": "Max Block Size",
    "skipBrokenMessages": "Skip Broken Messages",
    "commitEveryBatch": "Commit Every Batch",
    "threadPerConsumer": "Thread Per Consumer",
    "clickhouse": "ClickHouse",
    "advanced": "高级",
    "maxTotal": "最大总数",
    "quicklyEnter": "快速输入",
    "export": "导出",
    "csv": "CSV",
    "result": "结果",
    "collection": "Collection",
    "ttl": "TTL",
    "custom": "自定义",
    "simple": "简单",
    "modify": "修改",
    "remove": "移除",
    "status": "状态",
    "success": "成功",
    "description": "描述",
    "comment": "评论",
    "snippet": "片段",
    "id": "标记",
    "name": "名称",
    "description": "描述",
    "code": "代码",
    "created": "创建",
    "updated": "更新",
    "quote": "引用",
    "sshHost": "SSH 主机",
    "sshPort": "SSH 端口",
    "sshUsername": "SSH 用户名",
    "sshPassword": "SSH 密码",
    "more": "更多",
    "matchBrackets": "匹配括号",
    "filter": "过滤",
    "precise": "精确"
  },
  "language": {
    "english": "英语",
    "chinese": "中文"
  },
  "placeholder": {
    "alias": "请输入别名",
    "protocol": "请选择协议类型",
    "host": "请输入主机",
    "port": "请输入端口",
    "username": "请输入用户名",
    "password": "请输入密码",
    "database": "请输入数据库[可选]",
    "broker": "请输入kafka代理列表",
    "topic": "请输入Kafka消费主题",
    "group": "请输入消费的Kafka消息主题所属组",
    "format": "请输入数据解析格式",
    "uri": "请输入远程服务器地址",
    "table": "请输入表名",
    "path": "请输入文件路径",
    "setting": "请输入配置文件路径",
    "name": "请输入名字",
    "rowDelimiter": "delimiter symbol",
    "schema": "Schema",
    "numOfConsumer": "Number Of Consumer",
    "maxBlockSize": "Max Block Size",
    "skipBrokenMessages": "Skip Broken Messages",
    "commitEveryBatch": "Commit Every Batch",
    "threadPerConsumer": "Thread Per Consumer",
    "maxTotal": "返回查询最大行数,用户手动填写limit将覆盖该配置,如果设置0则该配置不生效",
    "collection": "Please input collection",
    "options": "Options",
    "ttl": "TTL",
    "required": "该值不能为空, 请输入"
  },
  "tooltip": {
    "network": "访问远程服务器的时间(以秒为单位)",
    "format": "底层数据支持格式化类型，默认为JSON",
    "language": "软件默认使用的语言为英文",
    "experimental": "这是一个实验性的特性，不应该在生产中使用",
    "elapsed": "耗时总时长(秒)",
    "rowsRead": "读取数据的总行数",
    "bytesRead": "读取数据的总字节数",
    "execute": "按 Ctrl+Enter 执行命令",
    "rows": "返回数据总行数",
    "editor": {
      "preview": "实时反馈编辑器修改状态",
      "activeLine": "用鼠标高亮显示当前选择行",
      "theme": "全局编辑器主题",
      "lineNumber": "显示代码行数",
      "language": "编辑器格式化类型"
    },
    "database": {
      "default": "默认的数据库引擎",
      "atomic": "It supports non-blocking DROP TABLE and RENAME TABLE queries and atomic EXCHANGE TABLES queries. Atomic database engine is used by default.",
      "lazy": "Keeps tables in RAM only expiration_time_in_seconds seconds after last access. Can be used only with *Log tables.",
      "mysql": "Allows to connect to databases on a remote MySQL server and perform INSERT and SELECT queries to exchange data between ClickHouse and MySQL.",
      "materialized_mysql": "Creates ClickHouse database with all the tables existing in MySQL, and all the data in those tables. ClickHouse server works as MySQL replica. It reads binlog and performs DDL and DML queries."
    },
    "table": {
      "log": "轻量级引擎。当您需要快速地构建多个小表(最多100万行)，然后将它们作为一个整体读取时，它们是最有效的。",
      "integration": "它主要用于将外部数据导入到ClickHouse中，或者直接在ClickHouse中操作外部数据源。",
      "kafka": "允许从Kafka Topic直接导入数据到ClickHouse",
      "hdfs": "允许从HDFS导入数据到ClickHouse",
      "jdbc": "允许ClickHouse通过JDBC连接到外部数据库",
      "sqlite": "The engine allows to import and export data to SQLite and supports queries to SQLite tables directly from ClickHouse.",
      "odbc": "Allows ClickHouse to connect to external databases via ODBC",
      "mongodb": "MongoDB engine is read-only table engine which allows to read data (SELECT queries) from remote MongoDB collection. Engine supports only non-nested data types. INSERT queries are not supported."
    },
    "property": {
      "timeSeconds": "Retention time in RAM (unit per second)",
      "host": "IP address or host name of the remote server",
      "port": "Port that the remote server is bound to",
      "database": "Database in an external DBMS",
      "username": "User name that authorizes access",
      "password": "The password of the authorized user",
      "broker": "List of Kafka Broker services, typically IP:9092",
      "topic": "Consuming kafka message topic",
      "group": "The consuming Kafka message topic belongs to a group, anonymous by default",
      "format": "The data format type varies from engine to engine",
      "uri": "URI or name of an external DBMS.\nURI Format: jdbc:<driver_name>://<host_name>:<port>/?user=<username>&password=<password>",
      "table": "Name of the table in database",
      "path": "Path to file with a database",
      "final": "When FINAL is specified, ClickHouse fully merges the data before returning the result and thus performs all data transformations that happen during merges for the given table engine",
      "rowDelimiter": "Delimiter character, which ends the message.",
      "schema": "Parameter that must be used if the format requires a schema definition. For example, Cap’n Proto requires the path to the schema file and the name of the root schema.capnp:Message object.",
      "numOfConsumer": "The number of consumers per table. Default: 1. Specify more consumers if the throughput of one consumer is insufficient. The total number of consumers should not exceed the number of partitions in the topic, since only one consumer can be assigned per partition.",
      "maxBlockSize": "The maximum batch size (in messages) for poll (default: max_block_size).",
      "skipBrokenMessages": "Kafka message parser tolerance to schema-incompatible messages per block. Default: 0. If kafka_skip_broken_messages = N then the engine skips N Kafka messages that cannot be parsed (a message equals a row of data).",
      "commitEveryBatch": "Commit every consumed and handled batch instead of a single commit after writing a whole block (default: 0).",
      "threadPerConsumer": "Provide independent thread for each consumer (default: 0). When enabled, every consumer flush the data independently, in parallel (otherwise — rows from several consumers squashed to form one block).",
      "setting": {
        "odbc": "Name of the section with connection settings in the odbc.ini file"
      },
      "mongodb": {
        "uri": "MongoDB server address",
        "collection": "Remote collection name",
        "database": "Remote database name",
        "username": "MongoDB user",
        "password": "User password",
        "options": "MongoDB connection string options (optional parameter)"
      }
    },
    "source": {
      "basic": "基本数据源",
      "clickhouse": "整合ClickHouse数据源"
    }
  },
  "alert": {
    "rename": "仅Atomic数据库引擎支持RENAME操作",
    "truncate": "该操作将删除所有数据，但不会删除表",
    "noversion": "当前已经是最新版本",
    "not_support_online": "当前暂不支持在线更新",
    "table_grate_50": "暂不支持迁移大于50GB数据表",
    "table_delete_grate_50": "暂不支持删除大于50GB数据表",
    "ttl": "达到时间后，系统将根据配置的TTL值，删除整个表中的数据",
    "ttl_remove": "TTL配置移除后, 系统将不会在对数据进行删除操作",
    "only_one_column": "不能删除数据表中的所有列, 该数据表必须至少包含一列",
    "delete_it": "我们不建议你删除它?这个操作会产生以下结果?",
    "migrate_datasource": "数据源存储方式已经修改请迁移数据后继续使用原有存储内容",
    "migrate_data_success": "迁移成功后源数据将被清理!"
  },
  "formatter": {
    "migrate_data": "需要迁移{0}条数据, 请确认是否迁移?"
  }
}
