/* Copyright (C)
 * zyumingfit@gmail.com
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 */
/*
 * @file tsi578_link.h
 * @brief The definition of system controller
 * @author zyumingfit@gmail.com
 * @version 01.00
 */

/* Autogenerated by SkyEye script */
#ifndef __TSI578_LINK_H__
#define __TSI578_LINK_H__

#define MAX_DEVICE_NUM 16

//Rapidio Logical Layer and Transport Layer Register
typedef struct regs{
	uint32_t rio_dev_id;
	uint32_t rio_dev_info;
	uint32_t rio_asbly_id;
	uint32_t rio_asbly_info;
	uint32_t rio_pe_feat;
	uint32_t rio_sw_port;
	uint32_t rio_src_op;
	uint32_t rio_pe_mc_feat;
	uint32_t rio_lut_size;
	uint32_t rio_sw_mc_info;
	uint32_t rio_host_base_id_lock;
	uint32_t rio_comp_tag;
	uint32_t rio_route_cfg_destid;
	uint32_t rio_route_cfg_port;
	uint32_t rio_LUT_attr;
	uint32_t rio_mc_mask_cfg;
	uint32_t rio_mc_destid_cfg;
	uint32_t rio_mc_destid_assoc;
}rio_regs_t;

//Register Offset
#define RIO_DEV_ID					0x00000
#define RIO_DEV_INFO				0x00004
#define RIO_ASBLY_ID				0x00008
#define RIO_ASBLY_INFO				0x0000c
#define RIO_PE_FEAT					0x00010
#define RIO_SW_PORT					0x00014
#define RIO_SRC_OP					0x00018
#define RIO_PE_MC_FEAT				0x00030
#define RIO_LUT_SIZE				0x00034
#define RIO_SW_MC_INFO				0x00038
#define RIO_HOST_BASE_ID_LOCK		0x00068
#define RIO_COMP_TAG				0x0006c
#define RIO_ROUTE_CFG_DESTID		0x00070
#define RIO_ROUTE_CFG_PORT			0x00074
#define RIO_LUT_ATTR				0x00078
#define RIO_MC_MASK_CFG				0x00080
#define RIO_MC_DESTID_CFG			0x00084
#define RIO_MC_DESTID_ASSOC			0x00088

//Register Reset value
#define r_RIO_DEV_ID				0x0578000d
#define r_RIO_DEV_INFO				0x00000010
#define r_RIO_ASBLY_ID				0x0001000d
#define r_RIO_ASBLY_INFO			0x00000100
#define r_RIO_PE_FEAT				0x1000051f
#define r_RIO_SW_PORT				0x00001000
#define r_RIO_SRC_OP				0x00000004
#define r_RIO_PE_MC_FEAT			0x00000000
#define r_RIO_LUT_SIZE				0x000001ff
#define r_RIO_SW_MC_INFO			0x00000008
#define r_RIO_HOST_BASE_ID_LOCK		0x0000ffff
#define r_RIO_COMP_TAG				0x00000000
#define r_RIO_ROUTE_CFG_DESTID		0x00000000
#define r_RIO_ROUTE_CFG_PORT		0x00000000
#define r_RIO_LUT_ATTR				0x000000ff
#define r_RIO_MC_MASK_CFG			0x00000000
#define r_RIO_MC_DESTID_CFG			0x00000000
#define r_RIO_MC_DESTID_ASSOC		0x00000000


//rapdio device type
typedef struct rio_device{
	conf_object_t *device_obj;
	tsi578_dev_intf *iface;
}rio_device_t;
//rapidio device list
typedef struct rio_device_list{
	rio_device_t device[MAX_DEVICE_NUM];
	int device_num;
}rio_device_list_t;


//tsi578 device type
typedef struct tsi578_link_device{
	conf_object_t* obj;
	rio_device_list_t device_list;	/* device list */
	rio_regs_t rio_regs;	/* rapidio register */
}tsi578_link_device_t;

#endif
