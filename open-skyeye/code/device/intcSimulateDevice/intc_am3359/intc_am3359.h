/* Copyright (C)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*
*/
/**
* @file intc_am3359.h
* @brief The definition of system controller
* @author Kewei Yu : keweihk@gmail.com
* @version 78.77
*/

/* Autogenerated by SkyEye script */
#ifndef __intc_am3359_H__
#define __intc_am3359_H__
#include <stdint.h>

typedef struct intc_am3359_reg{
	uint32_t revision;
	uint32_t sysconfig;
	uint32_t sysstatus;
	uint32_t sir_irq;
	uint32_t sir_fiq;
	uint32_t control;
	uint32_t protection;
	uint32_t idle;
	uint32_t irq_priority;
	uint32_t fiq_priority;
	uint32_t threshold;
	uint32_t itr[4];
	uint32_t mir[4];
	uint32_t mir_clear[4];
	uint32_t mir_set[4];
	uint32_t isr_set[4];
	uint32_t isr_clear[4];
	uint32_t pending_irq[4];
	uint32_t pending_fiq[4];
	uint32_t ilr[128];
}intc_am3359_reg_t;

typedef struct intc_am3359_device{
	conf_object_t* obj;
	intc_am3359_reg_t regs;
	conf_object_t* signal;
	core_signal_intf* signal_iface;
	uint32_t int_status;
}intc_am3359_device;

/*
 * Registers Definition
 */
#define INTC_REVISION		(0x0)
#define INTC_SYSCONFIG		(0x10)
#define INTC_SYSSTATUS		(0x14)
#define INTC_SIR_IRQ		(0x40)
#define INTC_SIR_FIQ		(0x44)
#define INTC_CONTROL		(0x48)
#define INTC_PROTECTION		(0x4c)
#define INTC_IDLE		(0x50)
#define INTC_IRQ_PRIORITY	(0x60)
#define INTC_FIQ_PRIORITY	(0x64)
#define INTC_THRESHOLD		(0x68)
#define INTC_SICR		(0x6c)
#define INTC_ITR(n)		(0x80 + ((n) * 0x20))
#define INTC_MIR(n)		(0x84 + ((n) * 0x20))
#define INTC_MIR_CLEAR(n)	(0x88 + ((n) * 0x20))
#define INTC_MIR_SET(n)		(0x8c + ((n) * 0x20))
#define INTC_ISR_SET(n)		(0x90 + ((n) * 0x20))
#define INTC_ISR_CLEAR(n)	(0x94 + ((n) * 0x20))
#define INTC_PENDING_IRQ(n)	(0x98 + ((n) * 0x20))
#define INTC_PENDING_FIQ(n)	(0x9c + ((n) * 0x20))
#define INTC_ILR(n)		(0x100 + ((n) * 0x04))

static char *regs_name[] = {
	"revision",
	"sysconfig",
	"sysstatus",
	"sir_irq",
	"sir_fiq",
	"control",
	"protection",
	"idle",
	"irq_priority",
	"fiq_priority",
	"threshold",
	"itr[0]",
	"itr[1]",
	"itr[2]",
	"itr[3]",
	"mir[0]",
	"mir[1]",
	"mir[2]",
	"mir[3]",
	"mir_clear[0]",
	"mir_clear[1]",
	"mir_clear[2]",
	"mir_clear[3]",
	"mir_set[0]",
	"mir_set[1]",
	"mir_set[2]",
	"mir_set[3]",
	"isr_set[0]",
	"isr_set[1]",
	"isr_set[2]",
	"isr_set[3]",
	"isr_clear[0]",
	"isr_clear[1]",
	"isr_clear[2]",
	"isr_clear[3]",
	"pending_irq[0]",
	"pending_irq[1]",
	"pending_irq[2]",
	"pending_irq[3]",
	"pending_fiq[0]",
	"pending_fiq[1]",
	"pending_fiq[2]",
	"pending_fiq[3]",
	"ilr[0]",
	"ilr[1]",
	"ilr[2]",
	"ilr[3]",
	"ilr[4]",
	"ilr[5]",
	"ilr[6]",
	"ilr[7]",
	"ilr[8]",
	"ilr[9]",
	"ilr[10]",
	"ilr[11]",
	"ilr[12]",
	"ilr[13]",
	"ilr[14]",
	"ilr[15]",
	"ilr[16]",
	"ilr[17]",
	"ilr[18]",
	"ilr[19]",
	"ilr[20]",
	"ilr[21]",
	"ilr[22]",
	"ilr[23]",
	"ilr[24]",
	"ilr[25]",
	"ilr[26]",
	"ilr[27]",
	"ilr[28]",
	"ilr[29]",
	"ilr[30]",
	"ilr[31]",
	"ilr[32]",
	"ilr[33]",
	"ilr[34]",
	"ilr[35]",
	"ilr[36]",
	"ilr[37]",
	"ilr[38]",
	"ilr[39]",
	"ilr[40]",
	"ilr[41]",
	"ilr[42]",
	"ilr[43]",
	"ilr[44]",
	"ilr[45]",
	"ilr[46]",
	"ilr[47]",
	"ilr[48]",
	"ilr[49]",
	"ilr[50]",
	"ilr[51]",
	"ilr[52]",
	"ilr[53]",
	"ilr[54]",
	"ilr[55]",
	"ilr[56]",
	"ilr[57]",
	"ilr[58]",
	"ilr[59]",
	"ilr[60]",
	"ilr[61]",
	"ilr[62]",
	"ilr[63]",
	"ilr[64]",
	"ilr[65]",
	"ilr[66]",
	"ilr[67]",
	"ilr[68]",
	"ilr[69]",
	"ilr[70]",
	"ilr[71]",
	"ilr[72]",
	"ilr[73]",
	"ilr[74]",
	"ilr[75]",
	"ilr[76]",
	"ilr[77]",
	"ilr[78]",
	"ilr[79]",
	"ilr[80]",
	"ilr[81]",
	"ilr[82]",
	"ilr[83]",
	"ilr[84]",
	"ilr[85]",
	"ilr[86]",
	"ilr[87]",
	"ilr[88]",
	"ilr[89]",
	"ilr[90]",
	"ilr[91]",
	"ilr[92]",
	"ilr[93]",
	"ilr[94]",
	"ilr[95]",
	"ilr[96]",
	"ilr[97]",
	"ilr[98]",
	"ilr[99]",
	"ilr[100]",
	"ilr[101]",
	"ilr[102]",
	"ilr[103]",
	"ilr[104]",
	"ilr[105]",
	"ilr[106]",
	"ilr[107]",
	"ilr[108]",
	"ilr[109]",
	"ilr[110]",
	"ilr[111]",
	"ilr[112]",
	"ilr[113]",
	"ilr[114]",
	"ilr[115]",
	"ilr[116]",
	"ilr[117]",
	"ilr[118]",
	"ilr[119]",
	"ilr[120]",
	"ilr[121]",
	"ilr[122]",
	"ilr[123]",
	"ilr[124]",
	"ilr[125]",
	"ilr[126]",
	"ilr[127]",
	NULL,
};
#endif
