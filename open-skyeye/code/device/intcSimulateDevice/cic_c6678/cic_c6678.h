/* Copyright (C)
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
* 
*/
/**
* @file intc_c6678.h
* @brief The definition of system controller 
* @author 
* @version 78.77
*/

/* Autogenerated by SkyEye script */
#ifndef __CIC_C6678_H__
#define __CIC_C6678_H__
#include <skyeye_lock.h>
 
#define MAX_CHANNEL_NUM 256
#define MAX_HOST_INT_MAP 64

typedef struct cic_c6678_reg{
	uint32_t  revision;
	uint32_t  ctrl;
	uint32_t  globalEnable;
	uint32_t  systemIntStIndexSet;
	uint32_t  systemIntStIndexClr;
	uint32_t  systemIntEnableIndexSet;
	uint32_t  systemIntEnableIndexClr;
	uint32_t  hostIntEnableIndexSet;
	uint32_t  hostIntEnableIndexClr;
	uint32_t  globalPriIndex;
	uint32_t  systemIntStRawOrSet[32]; //1024 / 32 = 32
	uint32_t  systemIntStEnableOrClr[32]; //1024 / 32 = 32
	uint32_t  systemIntEnableSet[32]; //1024 / 32 = 32
	uint32_t  systemIntEnableClr[32]; //1024 / 32 = 32
	uint32_t  channelMap[MAX_CHANNEL_NUM]; //1024 / 4 = 256
	uint32_t  hostInterruptMap[MAX_HOST_INT_MAP]; //256 / 4 = 64
	uint32_t  hostInterruptPriIndex[256];
	uint32_t  hostInterruptEnable[8]; //256 / 32

}cic_c6678_reg_t;

struct general_signal_s
{       
        conf_object_t* obj;
        general_signal_iface_t* iface;
};


typedef struct cic_c6678_device{
	conf_object_t*    obj;
	cic_c6678_reg_t*  regs;
	struct general_signal_s general_signal;
	RWLOCK_T lock;
}cic_c6678_device;

static char* regs_name[] = {
	"revision",
	"ctrl",
	"globalEnable",
	"systemIntStIndexSet",
	"systemIntStIndexClr",
	"systemIntEnableIndexSet",
	"systemIntEnableIndexClr",
	"hostIntEnableIndexSet",
	"hostIntEnableIndexClr",
	"globalPriIndex",
	NULL
};

static uint32_t regs_offset[] = {
	0x0000,
	0x0004,
	0x0010,
	0x0020,
	0x0024,
	0x0028,
	0x002c,
	0x0034,
	0x0038,
	0x0080,
};

#endif
