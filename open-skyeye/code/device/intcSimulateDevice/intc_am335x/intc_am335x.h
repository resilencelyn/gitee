/* Copyright (C)
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
* 
*/
/**
* @file intc_am335x.h
* @brief The definition of system controller 
* @author Kewei Yu : keweihk@gmail.com
* @version 78.77
*/

/* Autogenerated by SkyEye script */
#ifndef __intc_am335x_H__
#define __intc_am335x_H__

#define INT_LINE_NUM	128
#define REG_SIZE	32
#define MAX_PENDING	128
typedef struct intc_am335x_reg{
	uint32_t revision;
	uint32_t sysconfig;
	uint32_t sysstatus;
	uint32_t sir_irq;
	uint32_t sir_fiq;
	uint32_t control;
	uint32_t protection;
	uint32_t idle;
	uint32_t irq_priority;
	uint32_t fiq_priority;
	uint32_t threshold;
	uint32_t itr[4];
	uint32_t mir[4];
	uint32_t mir_clear[4];
	uint32_t mir_set[4];
	uint32_t isr_set[4];
	uint32_t isr_clear[4];
	uint32_t pending_irq[4];
	uint32_t pending_fiq[4];
	uint32_t ilr[128];
}intc_am335x_reg_t;

typedef struct intc_am335x_device{
	conf_object_t* obj;
	intc_am335x_reg_t regs;
	conf_object_t* signal_obj;
	core_signal_intf* core_signal;
	uint32_t int_status;
	int32_t current_pending_irq;
	int32_t current_pending_fiq;
	uint32_t irq_pendinglist[128];
	uint32_t plist_head;
	uint32_t plist_tail;
}intc_am335x_device;

/*
 * Registers Definition
 */
#define INTC_REVISION		(0x0)
#define INTC_SYSCONFIG		(0x10)
#define INTC_SYSSTATUS		(0x14)
#define INTC_SIR_IRQ		(0x40)
#define INTC_SIR_FIQ		(0x44)
#define INTC_CONTROL		(0x48)
#define INTC_PROTECTION		(0x4c)
#define INTC_IDLE		(0x50)
#define INTC_IRQ_PRIORITY	(0x60)
#define INTC_FIQ_PRIORITY	(0x64)
#define INTC_THRESHOLD		(0x68)
#define INTC_SICR		(0x6c)
#define INTC_ITR(n)		(0x80 + ((n) * 0x20))
#define INTC_MIR(n)		(0x84 + ((n) * 0x20))
#define INTC_MIR_CLEAR(n)	(0x88 + ((n) * 0x20))
#define INTC_MIR_SET(n)		(0x8c + ((n) * 0x20))
#define INTC_ISR_SET(n)		(0x90 + ((n) * 0x20))
#define INTC_ISR_CLEAR(n)	(0x94 + ((n) * 0x20))
#define INTC_PENDING_IRQ(n)	(0x98 + ((n) * 0x20))
#define INTC_PENDING_FIQ(n)	(0x9c + ((n) * 0x20))
#define INTC_ILR(n)		(0x100 + ((n) * 0x04))

#endif
