/* Copyright (C) *
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  *
*/
/**
* @file systimer_2410.h
* @brief The definition of system controller
* @author
* @version 78.77
*/

/* Autogenerated by SkyEye script */
#ifndef __timer_c6748_H__
#define __timer_c6748_H__

#include <skyeye_lock.h>
#include <stdint.h>

#define REVID		0x00
#define EMUMGT		0x04
#define GPINTGPEN	0x08
#define GPDATGPDIR	0x0c
#define TIM12		0x10
#define TIM34		0x14
#define PRD12		0x18
#define PRD34		0x1c
#define TCR		0x20
#define TGCR		0x24
#define WDTCR		0x28
#define REL12		0x34
#define REL34		0x38
#define CAP12		0x3c
#define CAP34		0x40
#define INTCTLSTAT	0x44
#define CMP0		0x60
#define CMP1		0x64
#define CMP2		0x68
#define CMP3		0x6c
#define CMP4		0x70
#define CMP5		0x74
#define CMP6		0x78
#define CMP7		0x7c

#define MASK(a, b) ((1 << ((b) - (a) + 1)) - 1)

#define BITS(r, a, b) (((r) >> (a)) & ((1 << (1 + (b)-(a)))-1))
#define BIT(r, n) (((r) >> (n)) & 1)
#define SET_BITS(r, a, b, v) (((r) & (~(MASK(a, b) << (a)))) | ((v) << (a)))

typedef struct at91rm9200x_systimer {
	conf_object_t *obj;
	struct registers {
		uint32_t revid;
		uint32_t emumgt;
		uint32_t gpintgpen;
		uint32_t gpdatgpdir;
		union {
			uint64_t tim64;
			struct {
				uint32_t tim12;
				uint32_t tim34;
			};
		};
		union {
			uint64_t prd64;
			struct {
				uint32_t prd12;
				uint32_t prd34;
			};
		};
		uint32_t tcr;
		uint32_t tgcr;
		uint32_t wdtcr;
		union {
			uint64_t rel64;
			struct {
				uint32_t rel12;
				uint32_t rel34;
			};
		};
		uint32_t cap12;
		uint32_t cap34;
		uint32_t intctlstat;
		uint32_t cmp0;
		uint32_t cmp1;
		uint32_t cmp2;
		uint32_t cmp3;
		uint32_t cmp4;
		uint32_t cmp5;
		uint32_t cmp6;
		uint32_t cmp7;
	}regs;
	int sche_id1;
	int sche_id2;
	int sche_id3;
	general_signal_intf *signal_iface;
	conf_object_t *signal;
    conf_object_t *pll0;
    device_clock_intf *pll0_freq_clock;
    time_handle_t *handle1;
    time_handle_t *handle2;
    uint32_t step1;
    uint32_t step2;
	int interrupt_number;
	int timer_number;
    uint32_t exte_clock;
	uint32_t tim34_shadow;
	uint32_t old_tcr;
	RWLOCK_T lock;
}timer_c6748_device;

static char* regs_name[] = {
	"revid",                    
	"emumgt",         
	"gpintgpen",      
	"gpdatgpdir",     
	"tim12",          
	"tim34",          
	"prd12",          
	"prd34",          
	"tcr",            
	"tgcr",           
	"wdtcr",          
	"rel12",          
	"rel34",          
	"cap12",          
	"cap34",          
	"intctlstat",     
	"cmp0",           
	"cmp1",           
	"cmp2",           
	"cmp3",           
	"cmp4",           
	"cmp5",           
	"cmp6",           
	"cmp7",           
	NULL                                     
};
#endif


		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

