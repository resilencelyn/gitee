/* Copyright (C)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*
*/
/**
* @file uart_s3c6410.h
* @brief The definition of system controller
* @author
* @version 78.77
*/

/* Autogenerated by SkyEye script */
#ifndef __uart_s3c6410_H__
#define __uart_s3c6410_H__
#include "fifo.h"

#define UART_UTRSTAT_INIT	0x6

typedef struct uart_s3c6410_reg{
	uint32_t ulcon;		/* UART line control register */
	uint32_t ucon;		/* UART control register */
	uint32_t ufcon;		/* UART FIFO control register */
	uint32_t umcon;		/* UART Modem control register */
	uint32_t utrstat;		/* UART Tx/Rx status register */
	uint32_t uerstat;		/* UART Rx error status register */
	uint32_t ufstat;		/* UART FIFO status register */
	uint32_t umstat;		/* UART Modem status register */
	uint32_t utxh;		/* UART transmit buffer register */
	uint32_t urxh;		/* UART receive buffer register */
	uint32_t ubrdiv;		/* Baud rate divisor register 0 */
	uint32_t ubrdivslot;		/* Baud rate divisor register 0 */
	uint32_t uintp;
	uint32_t uintsp;
	uint32_t uintm;
}uart_s3c6410_reg_t;

static char* regs_name[] ={
		"Ulcon",
                "Ucon",
                "Ufcon",
                "Umcon",
                "Utrstat",
                "Uerstat",
                "Ufstat",
                "Umstat",
                "Utxh",
                "Urxh",
                "Ubrdiv",
                "Ubrdivslot",
                "Uintp",
                "Uintsp",
                "Uintm",
		NULL
};


typedef struct uart_s3c6410_device{
	conf_object_t* obj;
	uart_s3c6410_reg_t* regs;
	skyeye_uart_intf* term_iface;
	conf_object_t* term;
	conf_object_t *uart_file;
	uart_file_intf *uart_file_iface;
	general_signal_intf* signal_iface;
	conf_object_t* signal;
	uint32_t sig_no;
	char **regs_name;
	FIFO *read_fifo;
	int dev_enable;
}uart_s3c6410_device;

#define ULCON		(0x0)  /*UART channel 0 line control register*/
#define UCON		(0x4)  /*UART channel 0 line control register*/
#define UFCON		(0x8)  /*UART channel 0 FIFO control register*/
#define UMCON		(0xc)  /*UART channel 0 Modem control register*/
#define UTRSTAT		(0x10) /*UART channel 0 Tx/Rx status control register*/
#define UERSTAT		(0x14) /*UART channel 0 line Rx error register*/
#define UFSTAT		(0x18) /*UART channel 0 FIFO status register*/
#define UMSTAT		(0x1c) /*UART channel 0 Modem status register*/
#define UTXH		(0x20) /*UART channel 0 transmit buffer register*/
#define URXH		(0x24) /*UART channel 0 recerve buffer register*/
#define UBRDIV		(0x28) /*UART channel 0 Baud rate division register*/
#define UDIVSLOT	(0x2C) /*UART channel 0 Dividing slot register*/
#define UINTP		(0x30) /*UART channel 0 Interrupt Pending register*/
#define UINTSP		(0x34) /*UART channel 0 Interrupt Source Pending register*/
#define UINTM		(0x38) /*UART channel 0 Interrupt Mask register*/
#endif
