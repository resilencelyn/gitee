/* Copyright (C)
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
* 
*/
/**
* @file syscrtl_28335.h
* @brief The definition of system controller 
* @author 
* @version 78.77
*/

/* Autogenerated by SkyEye script */
#ifndef __FLASH_28335_H__
#define __FLASH_28335_H__

#ifdef __cplusplus
extern "C" {
#endif

#define Uint16 unsigned short
/* Flash Option Register bit definitions */
struct  FOPT_BITS {       // bit   description
   Uint16     ENPIPE:1;   // 0     Enable Pipeline Mode
   Uint16     rsvd:15;    // 1-15  reserved
};

/* Allow access to the bit fields or entire register */
union FOPT_REG {
   Uint16           all;
   struct FOPT_BITS bit;
};

/* Flash Power Modes Register bit definitions */
struct  FPWR_BITS {       // bit   description
   Uint16     PWR:2;      // 0-1   Power Mode bits
   Uint16     rsvd:14;    // 2-15  reserved
};

/* Allow access to the bit fields or entire register */
union FPWR_REG {
   Uint16           all;
   struct FPWR_BITS bit;
};


/* Flash Status Register bit definitions */
struct  FSTATUS_BITS {       // bit   description
   Uint16     PWRS:2;        // 0-1   Power Mode Status bits
   Uint16     STDBYWAITS:1;  // 2     Bank/Pump Sleep to Standby Wait Counter Status bits
   Uint16     ACTIVEWAITS:1; // 3     Bank/Pump Standby to Active Wait Counter Status bits
   Uint16     rsvd1:4;       // 4-7   reserved
   Uint16     V3STAT:1;      // 8     VDD3V Status Latch bit
   Uint16     rsvd2:7;       // 9-15  reserved
};

/* Allow access to the bit fields or entire register */
union FSTATUS_REG {
   Uint16              all;
   struct FSTATUS_BITS bit;
};

/* Flash Sleep to Standby Wait Counter Register bit definitions */
struct  FSTDBYWAIT_BITS {    // bit   description
   Uint16     STDBYWAIT:9;   // 0-8   Bank/Pump Sleep to Standby Wait Count bits
   Uint16     rsvd:7;        // 9-15  reserved
};

/* Allow access to the bit fields or entire register */
union FSTDBYWAIT_REG {
   Uint16                 all;
   struct FSTDBYWAIT_BITS bit;
};

/* Flash Standby to Active Wait Counter Register bit definitions */
struct  FACTIVEWAIT_BITS {   // bit   description
   Uint16     ACTIVEWAIT:9;  // 0-8   Bank/Pump Standby to Active Wait Count bits
   Uint16     rsvd:7;        // 9-15  reserved
};

/* Allow access to the bit fields or entire register */
union FACTIVEWAIT_REG {
   Uint16                  all;
   struct FACTIVEWAIT_BITS bit;
};

/* Bank Read Access Wait State Register bit definitions */
struct  FBANKWAIT_BITS {     // bit   description
   Uint16     RANDWAIT:4;    // 0-3   Flash Random Read Wait State bits
   Uint16     rsvd1:4;       // 4-7   reserved
   Uint16     PAGEWAIT:4;    // 8-11  Flash Paged Read Wait State bits
   Uint16     rsvd2:4;       // 12-15 reserved
};

/* Allow access to the bit fields or entire register */
union FBANKWAIT_REG {
   Uint16                all;
   struct FBANKWAIT_BITS bit;
};

/* OTP Read Access Wait State Register bit definitions */
struct  FOTPWAIT_BITS {      // bit   description
   Uint16     OTPWAIT:5;     // 0-4   OTP Read Wait State bits
   Uint16     rsvd:11;       // 5-15  reserved
};

/* Allow access to the bit fields or entire register */
union FOTPWAIT_REG {
   Uint16               all;
   struct FOTPWAIT_BITS bit;
};


// FLASH Register File:
// address : 0x1000
typedef struct FLASH_REGS {
   union FOPT_REG        fopt;        // Option Register
   union FPWR_REG        fpwr;        // Power Modes Register
   union FSTATUS_REG     fstatus;     // Status Register
   union FSTDBYWAIT_REG  fstdbywait;  // Pump/Bank Sleep to Standby Wait State Register
   union FACTIVEWAIT_REG factivewait; // Pump/Bank Standby to Active Wait State Register
   union FBANKWAIT_REG   fbankwait;   // Bank Read Access Wait State Register
   union FOTPWAIT_REG    foptwait;    // OTP Read Access Wait State Register
}flash_28335_reg_t;

typedef struct syscrtl_28335_device{
	conf_object_t* obj;
	flash_28335_reg_t* regs;
	general_signal_intf* signal_iface;
	conf_object_t* signal;
	uint16_t tx_fifo[16];
	uint16_t rx_fifo[16];
	int Tx_int_number;
	int Rx_int_number;
	int sched_id;
	char **regs_name;
}flash_28335_device;

#define FOPT  		0x0
#define FPWR  		0x2
#define FSTATUS  	0x3
#define FSTDBYWAIT  	0x4
#define FACTIVEWAIT  	0x5
#define FBANKWAIT  	0x6
#define FOTPWAIT  	0x7

static char* regs_name[] = {
	"fopt",
	"fpwr",
	"fstatus",
	"fstdbywait",
	"factivewait",
	"fbankwait",
	"foptwait",
	NULL
};
static uint32_t regs_offset[] = {
	0x000,
	0x002,
	0x003,
	0x004,
	0x005,
	0x006,
	0x007,
};
#ifdef __cplusplus
}
#endif 

#endif
