2022-02-14 08:53:20 [lettuce-nioEventLoop-4-2] INFO  io.lettuce.core.protocol.CommandHandler --> null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1134)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-02-14 08:53:54 [Druid-ConnectionPool-Create-1114131202] ERROR com.alibaba.druid.pool.DruidDataSource --> create connection SQLException, url: jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:251)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1659)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor112.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 9 common frames omitted
Caused by: java.net.SocketException: Network is unreachable: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 12 common frames omitted
2022-02-14 08:53:55 [Druid-ConnectionPool-Create-1114131202] ERROR com.alibaba.druid.pool.DruidDataSource --> create connection SQLException, url: jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, errorCode 0, state 08S01
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:251)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1659)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor112.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 9 common frames omitted
Caused by: java.net.SocketException: Network is unreachable: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 12 common frames omitted
2022-02-14 08:53:55 [Druid-ConnectionPool-Create-1114131202] INFO  com.alibaba.druid.pool.DruidAbstractDataSource --> {dataSource-1} failContinuous is true
2022-02-14 08:53:55 [lettuce-eventExecutorLoop-1-3] INFO  io.lettuce.core.protocol.ConnectionWatchdog --> Reconnecting, last destination was /124.70.180.152:6379
2022-02-14 08:54:16 [Druid-ConnectionPool-Create-1114131202] ERROR com.alibaba.druid.pool.DruidDataSource --> create connection SQLException, url: jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, errorCode 1159, state 08S01
java.sql.SQLNonTransientConnectionException: Got timeout reading communication packets
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:251)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1659)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
2022-02-14 08:54:16 [lettuce-nioEventLoop-4-3] INFO  io.lettuce.core.protocol.ReconnectionHandler --> Reconnected to 124.70.180.152:6379
2022-02-14 08:54:29 [Druid-ConnectionPool-Create-1114131202] INFO  com.alibaba.druid.pool.DruidAbstractDataSource --> {dataSource-1} failContinuous is false
2022-02-14 08:54:48 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_ClusterManager] WARN  o.s.scheduling.quartz.LocalDataSourceJobStore --> This scheduler instance (Dell1644568849929) is still active but was recovered by another instance in the cluster.  This may cause inconsistent behavior.
2022-02-14 08:54:57 [RuoyiScheduler_QuartzSchedulerThread] ERROR com.alibaba.druid.filter.stat.StatFilter --> slow sql 9015 millis. SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'RuoyiScheduler' AND TRIGGER_STATE = ? AND NEXT_FIRE_TIME <= ? AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR != -1 AND NEXT_FIRE_TIME >= ?)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC["WAITING",1644800047188,1644800076959]
2022-02-14 08:58:04 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_ClusterManager] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 186655
2022-02-14 09:05:00 [RuoyiScheduler_Worker-13] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 415548
2022-02-14 09:05:00 [RuoyiScheduler_Worker-13] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 09:05:00 [RuoyiScheduler_Worker-13] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 09:05:00 [RuoyiScheduler_Worker-13] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 09:05:00 [RuoyiScheduler_Worker-13] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 09:05:00 [RuoyiScheduler_Worker-13] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 09:05:00 [RuoyiScheduler_Worker-13] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 09:05:00 [RuoyiScheduler_Worker-13] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：267毫秒(String), 0(String)
2022-02-14 09:05:00 [RuoyiScheduler_Worker-13] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 09:06:36 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_ClusterManager] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 60099
2022-02-14 09:09:52 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 183977
2022-02-14 09:09:52 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 291918
2022-02-14 09:10:00 [RuoyiScheduler_Worker-14] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 09:10:00 [RuoyiScheduler_Worker-14] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 09:10:00 [RuoyiScheduler_Worker-14] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type = ? and b.activate_date <= now()
2022-02-14 09:10:00 [RuoyiScheduler_Worker-14] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 09:10:00 [RuoyiScheduler_Worker-14] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 09:10:00 [RuoyiScheduler_Worker-14] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 09:10:00 [RuoyiScheduler_Worker-14] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.activationAddPackageProductionAndActivateDate(180)(String), 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去 总共耗时：139毫秒(String), 0(String)
2022-02-14 09:10:00 [RuoyiScheduler_Worker-14] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 09:17:24 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_MisfireHandler] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 443879
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 155392
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 599515
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type = ? and b.activate_date <= now()
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.activationAddPackageProductionAndActivateDate(180)(String), 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去 总共耗时：258毫秒(String), 0(String)
2022-02-14 09:20:00 [RuoyiScheduler_Worker-15] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 09:23:37 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 215917
2022-02-14 09:23:37 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 216013
2022-02-14 09:29:13 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_ClusterManager] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 335815
2022-02-14 09:30:00 [RuoyiScheduler_Worker-16] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 09:30:00 [RuoyiScheduler_Worker-16] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 09:30:00 [RuoyiScheduler_Worker-16] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type = ? and b.activate_date <= now()
2022-02-14 09:30:00 [RuoyiScheduler_Worker-16] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 09:30:00 [RuoyiScheduler_Worker-16] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 09:30:00 [RuoyiScheduler_Worker-16] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 09:30:00 [RuoyiScheduler_Worker-16] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.activationAddPackageProductionAndActivateDate(180)(String), 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去 总共耗时：95毫秒(String), 0(String)
2022-02-14 09:30:00 [RuoyiScheduler_Worker-16] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 09:35:00 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 299123
2022-02-14 09:35:00 [RuoyiScheduler_Worker-17] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 09:35:00 [RuoyiScheduler_Worker-17] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 09:35:00 [RuoyiScheduler_Worker-17] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 09:35:00 [RuoyiScheduler_Worker-17] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 09:35:00 [RuoyiScheduler_Worker-17] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 09:35:00 [RuoyiScheduler_Worker-17] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 09:35:00 [RuoyiScheduler_Worker-17] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：113毫秒(String), 0(String)
2022-02-14 09:35:00 [RuoyiScheduler_Worker-17] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 09:38:01 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_MisfireHandler] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 180005
2022-02-14 09:40:00 [RuoyiScheduler_Worker-18] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 09:40:00 [RuoyiScheduler_Worker-18] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 09:40:00 [RuoyiScheduler_Worker-18] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 09:40:00 [RuoyiScheduler_Worker-18] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 09:40:00 [RuoyiScheduler_Worker-18] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 09:40:00 [RuoyiScheduler_Worker-18] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 09:40:00 [RuoyiScheduler_Worker-18] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：102毫秒(String), 0(String)
2022-02-14 09:40:00 [RuoyiScheduler_Worker-18] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 09:45:00 [RuoyiScheduler_Worker-19] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 299481
2022-02-14 09:45:00 [RuoyiScheduler_Worker-19] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 09:45:00 [RuoyiScheduler_Worker-19] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 09:45:00 [RuoyiScheduler_Worker-19] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 09:45:00 [RuoyiScheduler_Worker-19] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 09:45:00 [RuoyiScheduler_Worker-19] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 09:45:00 [RuoyiScheduler_Worker-19] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 09:45:00 [RuoyiScheduler_Worker-19] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：333毫秒(String), 0(String)
2022-02-14 09:45:00 [RuoyiScheduler_Worker-19] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 09:47:49 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_MisfireHandler] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 167849
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 71275
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 299409
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type = ? and b.activate_date <= now()
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.activationAddPackageProductionAndActivateDate(180)(String), 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去 总共耗时：227毫秒(String), 0(String)
2022-02-14 09:50:00 [RuoyiScheduler_Worker-20] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 09:54:19 [http-nio-8080-exec-23] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==>  Preparing: select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status, r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status from sys_user u left join sys_dept d on u.dept_id = d.dept_id left join sys_user_role ur on u.user_id = ur.user_id left join sys_role r on r.role_id = ur.role_id where u.user_name = ?
2022-02-14 09:54:19 [http-nio-8080-exec-23] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==> Parameters: admin(String)
2022-02-14 09:54:19 [http-nio-8080-exec-23] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> <==      Total: 1
2022-02-14 09:54:20 [http-nio-8080-exec-23] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==>  Preparing: update sys_user SET dept_id = ?, user_name = ?, nick_name = ?, email = ?, phonenumber = ?, sex = ?, avatar = ?, password = ?, status = ?, login_ip = ?, login_date = ?, remark = ?, update_time = sysdate() where user_id = ?
2022-02-14 09:54:20 [schedule-pool-2] INFO  sys-user --> [127.0.0.1]XX XX[admin][Success][登录成功]
2022-02-14 09:54:20 [schedule-pool-2] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 258876
2022-02-14 09:54:20 [http-nio-8080-exec-23] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==> Parameters: 100(Long), admin(String), 管理员(String), (String), 15888888899(String), 0(String), /profile/avatar/2022/01/12/86bb5301-5e36-4e6a-bc9c-d83d345ff6e5.jpeg(String), $2a$10$WcNvbk3v3pb1l7j4JQ0Fp.LocOqiN55XyasfCoaYaLHThOLXorpWW(String), 0(String), 127.0.0.1(String), 2022-02-14 09:54:20.105(Timestamp), 管理员(String), 1(Long)
2022-02-14 09:54:20 [http-nio-8080-exec-23] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> <==    Updates: 1
2022-02-14 09:54:20 [schedule-pool-2] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==>  Preparing: insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time) values (?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 09:54:20 [schedule-pool-2] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==> Parameters: admin(String), 0(String), 127.0.0.1(String), XX XX(String), Chrome 9(String), Windows 10(String), 登录成功(String)
2022-02-14 09:54:20 [schedule-pool-2] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> <==    Updates: 1
2022-02-14 09:54:20 [http-nio-8080-exec-25] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 09:54:20 [http-nio-8080-exec-25] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 09:54:20 [http-nio-8080-exec-25] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 09:54:33 [http-nio-8080-exec-22] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 09:54:33 [http-nio-8080-exec-22] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 09:54:33 [http-nio-8080-exec-22] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 0
2022-02-14 09:55:00 [RuoyiScheduler_Worker-1] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 09:55:00 [RuoyiScheduler_Worker-1] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 09:55:00 [RuoyiScheduler_Worker-1] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 09:55:00 [RuoyiScheduler_Worker-1] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 09:55:00 [RuoyiScheduler_Worker-1] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 09:55:00 [RuoyiScheduler_Worker-1] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 09:55:00 [RuoyiScheduler_Worker-1] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：82毫秒(String), 0(String)
2022-02-14 09:55:00 [RuoyiScheduler_Worker-1] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 09:55:05 [http-nio-8080-exec-29] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 09:55:05 [http-nio-8080-exec-29] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 09:55:05 [http-nio-8080-exec-29] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 09:55:05 [http-nio-8080-exec-29] DEBUG c.y.c.m.y.c.YzWxByProductAgentMapper.findConfig --> ==>  Preparing: SELECT config_value FROM sys_config WHERE config_key = ?
2022-02-14 09:55:05 [http-nio-8080-exec-29] DEBUG c.y.c.m.y.c.YzWxByProductAgentMapper.findConfig --> ==> Parameters: IndexpageCacheTime(String)
2022-02-14 09:55:05 [http-nio-8080-exec-29] DEBUG c.y.c.m.y.c.YzWxByProductAgentMapper.findConfig --> <==      Total: 1
2022-02-14 09:55:05 [http-nio-8080-exec-29] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 09:55:05 [http-nio-8080-exec-29] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 09:55:06 [http-nio-8080-exec-29] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 09:55:06 [http-nio-8080-exec-29] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> ==>  Preparing: select id , downCount , overdoseCount , expiringSoonCount , thresholdReachedCount , simCardCount , simCardNewCount , currentMonth , simActivity , CONVERT(lifeCycleDistribution USING utf8mb4) AS 'lifeCycleDistribution', CONVERT(businessVolumeFlow USING utf8mb4) AS 'businessVolumeFlow', CONVERT(businessVolumeVoice USING utf8mb4) AS 'businessVolumeVoice', CONVERT(businessVolumeMessage USING utf8mb4) AS 'businessVolumeMessage', customerCount , customerNewCount , salesContractCount , salesContractDepositCount , weChatOrderCollection , orderAmount , systemCliqueCount , systemUserCount , activationCardCount , shipCard , logInIp , DATE_FORMAT(create_date,'%Y-%m-%d %H:%i:%S') as create_date, DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S') as update_date, DATE_FORMAT(record_date,'%Y-%m-%d') as record_date, dept_id, CONVERT(requestMap USING utf8mb4) AS 'requestMap' from yz_indexpage WHERE id = ? LIMIT 1
2022-02-14 09:55:06 [http-nio-8080-exec-29] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> ==> Parameters: 72(Integer)
2022-02-14 09:55:06 [http-nio-8080-exec-29] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> <==      Total: 1
2022-02-14 09:56:45 [http-nio-8080-exec-3] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 09:56:45 [http-nio-8080-exec-3] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 09:56:45 [http-nio-8080-exec-3] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 09:56:50 [http-nio-8080-exec-20] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 09:56:50 [http-nio-8080-exec-20] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 09:56:50 [http-nio-8080-exec-20] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 09:56:50 [http-nio-8080-exec-20] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 09:56:50 [http-nio-8080-exec-20] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 09:56:50 [http-nio-8080-exec-20] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 09:57:28 [http-nio-8080-exec-12] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 09:57:28 [http-nio-8080-exec-12] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 09:57:28 [http-nio-8080-exec-12] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 09:57:31 [http-nio-8080-exec-5] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 09:57:31 [http-nio-8080-exec-5] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 09:57:31 [http-nio-8080-exec-5] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 09:57:32 [http-nio-8080-exec-5] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 09:57:32 [http-nio-8080-exec-5] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 09:57:32 [http-nio-8080-exec-5] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 09:58:04 [http-nio-8080-exec-30] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 09:58:04 [http-nio-8080-exec-30] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 09:58:04 [http-nio-8080-exec-30] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 09:58:06 [http-nio-8080-exec-11] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 09:58:06 [http-nio-8080-exec-11] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 09:58:07 [http-nio-8080-exec-11] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 09:58:07 [http-nio-8080-exec-11] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 09:58:07 [http-nio-8080-exec-11] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 09:58:07 [http-nio-8080-exec-11] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 09:59:31 [http-nio-8080-exec-17] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 09:59:31 [http-nio-8080-exec-17] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 09:59:31 [http-nio-8080-exec-17] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 09:59:34 [http-nio-8080-exec-15] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 09:59:34 [http-nio-8080-exec-15] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 09:59:34 [http-nio-8080-exec-15] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 09:59:34 [http-nio-8080-exec-15] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 09:59:34 [http-nio-8080-exec-15] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 09:59:35 [http-nio-8080-exec-15] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 09:59:50 [http-nio-8080-exec-23] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 09:59:50 [http-nio-8080-exec-23] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 09:59:50 [http-nio-8080-exec-23] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 09:59:54 [http-nio-8080-exec-25] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 09:59:54 [http-nio-8080-exec-25] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 09:59:54 [http-nio-8080-exec-25] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 09:59:54 [http-nio-8080-exec-25] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 09:59:54 [http-nio-8080-exec-25] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 09:59:54 [http-nio-8080-exec-25] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 10:00:00 [RuoyiScheduler_Worker-2] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 294840
2022-02-14 10:00:00 [RuoyiScheduler_Worker-2] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 10:00:00 [RuoyiScheduler_Worker-2] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 10:00:00 [RuoyiScheduler_Worker-2] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 10:00:00 [RuoyiScheduler_Worker-2] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 10:00:01 [RuoyiScheduler_Worker-2] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 10:00:01 [RuoyiScheduler_Worker-2] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 10:00:01 [RuoyiScheduler_Worker-2] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：308毫秒(String), 0(String)
2022-02-14 10:00:01 [RuoyiScheduler_Worker-2] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 10:01:37 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_ClusterManager] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 96386
2022-02-14 10:03:13 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_MisfireHandler] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 95566
2022-02-14 10:03:53 [http-nio-8080-exec-26] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:03:53 [http-nio-8080-exec-26] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 10:03:54 [http-nio-8080-exec-26] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 10:03:57 [http-nio-8080-exec-29] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:03:57 [http-nio-8080-exec-29] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:03:57 [http-nio-8080-exec-29] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:03:57 [http-nio-8080-exec-29] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:03:57 [http-nio-8080-exec-29] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:03:57 [http-nio-8080-exec-29] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 10:04:48 [http-nio-8080-exec-2] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:04:48 [http-nio-8080-exec-2] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 10:04:48 [http-nio-8080-exec-2] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 10:04:51 [http-nio-8080-exec-27] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:04:51 [http-nio-8080-exec-27] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:04:51 [http-nio-8080-exec-27] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:04:51 [http-nio-8080-exec-27] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:04:51 [http-nio-8080-exec-27] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:04:51 [http-nio-8080-exec-27] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 10:06:11 [http-nio-8080-exec-4] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:06:11 [http-nio-8080-exec-4] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 10:06:11 [http-nio-8080-exec-4] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 10:06:15 [http-nio-8080-exec-13] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:06:15 [http-nio-8080-exec-13] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:06:15 [http-nio-8080-exec-13] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:06:15 [http-nio-8080-exec-13] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:06:15 [http-nio-8080-exec-13] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:06:15 [http-nio-8080-exec-13] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 10:06:57 [schedule-pool-1] INFO  sys-user --> [127.0.0.1]XX XX[admin][Logout][退出成功]
2022-02-14 10:06:57 [schedule-pool-1] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==>  Preparing: insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time) values (?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:06:57 [schedule-pool-1] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==> Parameters: admin(String), 0(String), 127.0.0.1(String), XX XX(String), Chrome 9(String), Windows 10(String), 退出成功(String)
2022-02-14 10:06:57 [schedule-pool-1] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> <==    Updates: 1
2022-02-14 10:07:08 [schedule-pool-5] INFO  sys-user --> [127.0.0.1]XX XX[5iot][Error][验证码错误]
2022-02-14 10:07:08 [schedule-pool-5] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==>  Preparing: insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time) values (?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:07:08 [schedule-pool-5] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==> Parameters: 5iot(String), 1(String), 127.0.0.1(String), XX XX(String), Chrome 9(String), Windows 10(String), 验证码错误(String)
2022-02-14 10:07:08 [http-nio-8080-exec-14] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver --> Resolved [com.yunze.common.exception.user.CaptchaException: 验证码错误]
2022-02-14 10:07:08 [schedule-pool-5] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> <==    Updates: 1
2022-02-14 10:07:11 [http-nio-8080-exec-17] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==>  Preparing: select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status, r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status from sys_user u left join sys_dept d on u.dept_id = d.dept_id left join sys_user_role ur on u.user_id = ur.user_id left join sys_role r on r.role_id = ur.role_id where u.user_name = ?
2022-02-14 10:07:11 [http-nio-8080-exec-17] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==> Parameters: 5iot(String)
2022-02-14 10:07:11 [http-nio-8080-exec-17] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> <==      Total: 1
2022-02-14 10:07:11 [http-nio-8080-exec-17] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role r on r.role_id = ur.role_id where m.status = '0' and r.status = '0' and ur.user_id = ?
2022-02-14 10:07:11 [http-nio-8080-exec-17] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:07:11 [http-nio-8080-exec-17] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> <==      Total: 100
2022-02-14 10:07:11 [http-nio-8080-exec-17] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==>  Preparing: update sys_user SET dept_id = ?, user_name = ?, nick_name = ?, email = ?, phonenumber = ?, sex = ?, avatar = ?, password = ?, status = ?, login_ip = ?, login_date = ?, remark = ?, update_time = sysdate() where user_id = ?
2022-02-14 10:07:11 [http-nio-8080-exec-17] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==> Parameters: 100(Long), 5iot(String), 演示账号(String), yunye@5iot.cn(String), 17853123033(String), 0(String), /profile/avatar/2022/01/12/86bb5301-5e36-4e6a-bc9c-d83d345ff6e5.jpeg(String), $2a$10$Z03ZGxYMD.p3qk3bKQTQcOCr42DcuDhDVnAa9vgxidpB823psbmSS(String), 0(String), 127.0.0.1(String), 2022-02-14 10:07:11.677(Timestamp), 演示账号(String), 100(Long)
2022-02-14 10:07:11 [schedule-pool-2] INFO  sys-user --> [127.0.0.1]XX XX[5iot][Success][登录成功]
2022-02-14 10:07:11 [schedule-pool-2] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 237730
2022-02-14 10:07:11 [http-nio-8080-exec-17] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> <==    Updates: 1
2022-02-14 10:07:11 [schedule-pool-2] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==>  Preparing: insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time) values (?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:07:11 [schedule-pool-2] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==> Parameters: 5iot(String), 0(String), 127.0.0.1(String), XX XX(String), Chrome 9(String), Windows 10(String), 登录成功(String)
2022-02-14 10:07:11 [schedule-pool-2] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> <==    Updates: 1
2022-02-14 10:07:12 [http-nio-8080-exec-10] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id WHERE r.del_flag = '0' and ur.user_id = ?
2022-02-14 10:07:12 [http-nio-8080-exec-10] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:07:12 [http-nio-8080-exec-10] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> <==      Total: 1
2022-02-14 10:07:12 [http-nio-8080-exec-10] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role r on r.role_id = ur.role_id where m.status = '0' and r.status = '0' and ur.user_id = ?
2022-02-14 10:07:12 [http-nio-8080-exec-10] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:07:12 [http-nio-8080-exec-10] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> <==      Total: 100
2022-02-14 10:07:12 [http-nio-8080-exec-15] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role ro on ur.role_id = ro.role_id left join sys_user u on ur.user_id = u.user_id where u.user_id = ? and m.menu_type in ('M', 'C') and m.status = 0 AND ro.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:07:12 [http-nio-8080-exec-15] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:07:12 [http-nio-8080-exec-15] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> <==      Total: 36
2022-02-14 10:07:14 [http-nio-8080-exec-19] ERROR c.y.framework.web.exception.GlobalExceptionHandler --> 不允许访问
2022-02-14 10:07:14 [http-nio-8080-exec-19] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver --> Resolved [org.springframework.security.access.AccessDeniedException: 不允许访问]
2022-02-14 10:07:15 [http-nio-8080-exec-23] ERROR c.y.framework.web.exception.GlobalExceptionHandler --> 不允许访问
2022-02-14 10:07:15 [http-nio-8080-exec-23] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver --> Resolved [org.springframework.security.access.AccessDeniedException: 不允许访问]
2022-02-14 10:07:46 [schedule-pool-1] INFO  sys-user --> [127.0.0.1]XX XX[5iot][Logout][退出成功]
2022-02-14 10:07:46 [schedule-pool-1] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==>  Preparing: insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time) values (?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:07:46 [schedule-pool-1] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==> Parameters: 5iot(String), 0(String), 127.0.0.1(String), XX XX(String), Chrome 9(String), Windows 10(String), 退出成功(String)
2022-02-14 10:07:46 [schedule-pool-1] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> <==    Updates: 1
2022-02-14 10:08:07 [http-nio-8080-exec-24] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==>  Preparing: select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status, r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status from sys_user u left join sys_dept d on u.dept_id = d.dept_id left join sys_user_role ur on u.user_id = ur.user_id left join sys_role r on r.role_id = ur.role_id where u.user_name = ?
2022-02-14 10:08:07 [http-nio-8080-exec-24] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==> Parameters: admin(String)
2022-02-14 10:08:07 [http-nio-8080-exec-24] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> <==      Total: 1
2022-02-14 10:08:07 [http-nio-8080-exec-24] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==>  Preparing: update sys_user SET dept_id = ?, user_name = ?, nick_name = ?, email = ?, phonenumber = ?, sex = ?, avatar = ?, password = ?, status = ?, login_ip = ?, login_date = ?, remark = ?, update_time = sysdate() where user_id = ?
2022-02-14 10:08:07 [http-nio-8080-exec-24] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==> Parameters: 100(Long), admin(String), 管理员(String), (String), 15888888899(String), 0(String), /profile/avatar/2022/01/12/86bb5301-5e36-4e6a-bc9c-d83d345ff6e5.jpeg(String), $2a$10$WcNvbk3v3pb1l7j4JQ0Fp.LocOqiN55XyasfCoaYaLHThOLXorpWW(String), 0(String), 127.0.0.1(String), 2022-02-14 10:08:07.171(Timestamp), 管理员(String), 1(Long)
2022-02-14 10:08:07 [schedule-pool-4] INFO  sys-user --> [127.0.0.1]XX XX[admin][Success][登录成功]
2022-02-14 10:08:07 [schedule-pool-4] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==>  Preparing: insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time) values (?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:08:07 [schedule-pool-4] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==> Parameters: admin(String), 0(String), 127.0.0.1(String), XX XX(String), Chrome 9(String), Windows 10(String), 登录成功(String)
2022-02-14 10:08:07 [http-nio-8080-exec-24] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> <==    Updates: 1
2022-02-14 10:08:07 [schedule-pool-4] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> <==    Updates: 1
2022-02-14 10:08:07 [http-nio-8080-exec-22] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:08:07 [http-nio-8080-exec-22] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 10:08:07 [http-nio-8080-exec-22] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 10:08:10 [http-nio-8080-exec-26] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:08:10 [http-nio-8080-exec-26] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:08:10 [http-nio-8080-exec-26] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:08:10 [http-nio-8080-exec-26] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:08:10 [http-nio-8080-exec-26] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:08:10 [http-nio-8080-exec-26] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 10:08:22 [http-nio-8080-exec-1] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark FROM sys_role r LEFT JOIN sys_user_role ur ON ur.role_id = r.role_id LEFT JOIN sys_user u ON u.user_id = ur.user_id LEFT JOIN sys_dept d ON u.dept_id = d.dept_id WHERE r.del_flag = '0') table_count
2022-02-14 10:08:22 [http-nio-8080-exec-1] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> ==> Parameters: 
2022-02-14 10:08:22 [http-nio-8080-exec-1] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> <==      Total: 1
2022-02-14 10:08:22 [http-nio-8080-exec-1] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.del_flag = '0' order by r.role_sort LIMIT ?
2022-02-14 10:08:22 [http-nio-8080-exec-1] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> ==> Parameters: 10(Integer)
2022-02-14 10:08:22 [http-nio-8080-exec-1] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> <==      Total: 9
2022-02-14 10:08:25 [http-nio-8080-exec-2] DEBUG c.yunze.system.mapper.SysMenuMapper.selectMenuList --> ==>  Preparing: select menu_id, menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, ifnull(perms,'') as perms, icon, create_time from sys_menu order by parent_id, order_num
2022-02-14 10:08:25 [http-nio-8080-exec-2] DEBUG c.yunze.system.mapper.SysMenuMapper.selectMenuList --> ==> Parameters: 
2022-02-14 10:08:25 [http-nio-8080-exec-2] DEBUG c.yunze.system.mapper.SysMenuMapper.selectMenuList --> <==      Total: 198
2022-02-14 10:08:25 [http-nio-8080-exec-2] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_id = ?
2022-02-14 10:08:25 [http-nio-8080-exec-2] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==> Parameters: 9(Long)
2022-02-14 10:08:25 [http-nio-8080-exec-2] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> <==      Total: 1
2022-02-14 10:08:25 [http-nio-8080-exec-2] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuListByRoleId --> ==>  Preparing: select m.menu_id from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id where rm.role_id = ? and m.menu_id not in (select m.parent_id from sys_menu m inner join sys_role_menu rm on m.menu_id = rm.menu_id and rm.role_id = ?) order by m.parent_id, m.order_num
2022-02-14 10:08:25 [http-nio-8080-exec-2] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuListByRoleId --> ==> Parameters: 9(Long), 9(Long)
2022-02-14 10:08:25 [http-nio-8080-exec-2] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuListByRoleId --> <==      Total: 90
2022-02-14 10:08:25 [http-nio-8080-exec-20] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_id = ?
2022-02-14 10:08:25 [http-nio-8080-exec-20] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==> Parameters: 9(Long)
2022-02-14 10:08:25 [http-nio-8080-exec-20] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> <==      Total: 1
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.s.mapper.SysRoleMapper.checkRoleNameUnique --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_name=? limit 1
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.s.mapper.SysRoleMapper.checkRoleNameUnique --> ==> Parameters: 演示账号(String)
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.s.mapper.SysRoleMapper.checkRoleNameUnique --> <==      Total: 1
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.system.mapper.SysRoleMapper.checkRoleKeyUnique --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_key=? limit 1
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.system.mapper.SysRoleMapper.checkRoleKeyUnique --> ==> Parameters: testdome(String)
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.system.mapper.SysRoleMapper.checkRoleKeyUnique --> <==      Total: 1
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG com.yunze.system.mapper.SysRoleMapper.updateRole --> ==>  Preparing: update sys_role SET role_name = ?, role_key = ?, role_sort = ?, data_scope = ?, menu_check_strictly = ?, dept_check_strictly = ?, status = ?, update_by = ?, update_time = sysdate() where role_id = ?
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG com.yunze.system.mapper.SysRoleMapper.updateRole --> ==> Parameters: 演示账号(String), testdome(String), 9(String), 1(String), true(Boolean), true(Boolean), 0(String), admin(String), 9(Long)
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG com.yunze.system.mapper.SysRoleMapper.updateRole --> <==    Updates: 1
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.s.m.SysRoleMenuMapper.deleteRoleMenuByRoleId --> ==>  Preparing: delete from sys_role_menu where role_id=?
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.s.m.SysRoleMenuMapper.deleteRoleMenuByRoleId --> ==> Parameters: 9(Long)
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.s.m.SysRoleMenuMapper.deleteRoleMenuByRoleId --> <==    Updates: 120
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.system.mapper.SysRoleMenuMapper.batchRoleMenu --> ==>  Preparing: insert into sys_role_menu(role_id, menu_id) values
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.system.mapper.SysRoleMenuMapper.batchRoleMenu --> ==> Parameters: 9(Long), 2125(Long), 9(Long), 2027(Long), 9(Long), 100(Long), 9(Long), 2028(Long), 9(Long), 2041(Long), 9(Long), 103(Long), 9(Long), 101(Long), 9(Long), 2000(Long), 9(Long), 2012(Long), 9(Long), 2013(Long), 9(Long), 1(Long), 9(Long), 102(Long), 9(Long), 104(Long), 9(Long), 105(Long), 9(Long), 106(Long), 9(Long), 108(Long), 9(Long), 2(Long), 9(Long), 110(Long), 9(Long), 3(Long), 9(Long), 115(Long), 9(Long), 2017(Long), 9(Long), 2081(Long), 9(Long), 1001(Long), 9(Long), 1002(Long), 9(Long), 1006(Long), 9(Long), 2037(Long), 9(Long), 2039(Long), 9(Long), 2040(Long), 9(Long), 2038(Long), 9(Long), 2029(Long), 9(Long), 2030(Long), 9(Long), 2034(Long), 9(Long), 2050(Long), 9(Long), 2052(Long), 9(Long), 2053(Long), 9(Long), 2051(Long), 9(Long), 2042(Long), 9(Long), 2043(Long), 9(Long), 1017(Long), 9(Long), 1018(Long), 9(Long), 1019(Long), 9(Long), 1008(Long), 9(Long), 1009(Long), 9(Long), 2001(Long), 9(Long), 2003(Long), 9(Long), 2006(Long), 9(Long), 2005(Long), 9(Long), 2008(Long), 9(Long), 2009(Long), 9(Long), 2010(Long), 9(Long), 2011(Long), 9(Long), 2058(Long), 9(Long), 2059(Long), 9(Long), 2060(Long), 9(Long), 2061(Long), 9(Long), 2062(Long), 9(Long), 2080(Long), 9(Long), 2087(Long), 9(Long), 2088(Long), 9(Long), 2093(Long), 9(Long), 2104(Long), 9(Long), 2106(Long), 9(Long), 2110(Long), 9(Long), 2153(Long), 9(Long), 2154(Long), 9(Long), 2155(Long), 9(Long), 2156(Long), 9(Long), 2167(Long), 9(Long), 2168(Long), 9(Long), 2169(Long), 9(Long), 2004(Long), 9(Long), 2073(Long), 9(Long), 2074(Long), 9(Long), 2076(Long), 9(Long), 2109(Long), 9(Long), 2020(Long), 9(Long), 2022(Long), 9(Long), 2023(Long), 9(Long), 2024(Long), 9(Long), 2025(Long), 9(Long), 2026(Long), 9(Long), 2021(Long), 9(Long), 2071(Long), 9(Long), 2072(Long), 9(Long), 2075(Long), 9(Long), 2085(Long), 9(Long), 2082(Long), 9(Long), 2108(Long), 9(Long), 2014(Long), 9(Long), 2015(Long), 9(Long), 2084(Long), 9(Long), 2018(Long), 9(Long), 2019(Long), 9(Long), 2063(Long), 9(Long), 2065(Long), 9(Long), 2066(Long), 9(Long), 2067(Long), 9(Long), 2070(Long), 9(Long), 2137(Long), 9(Long), 2064(Long), 9(Long), 2068(Long), 9(Long), 2069(Long), 9(Long), 2089(Long), 9(Long), 2102(Long), 9(Long), 2172(Long), 9(Long), 2173(Long), 9(Long), 2175(Long), 9(Long), 2176(Long), 9(Long), 2177(Long), 9(Long), 2178(Long), 9(Long), 2179(Long), 9(Long), 2180(Long), 9(Long), 2181(Long), 9(Long), 2182(Long), 9(Long), 2183(Long), 9(Long), 2184(Long), 9(Long), 2185(Long), 9(Long), 2190(Long), 9(Long), 2191(Long), 9(Long), 2192(Long), 9(Long), 2193(Long), 9(Long), 2194(Long), 9(Long), 2195(Long), 9(Long), 2196(Long), 9(Long), 2197(Long), 9(Long), 1013(Long), 9(Long), 1014(Long), 9(Long), 1015(Long), 9(Long), 1021(Long), 9(Long), 1022(Long), 9(Long), 1023(Long), 9(Long), 1026(Long), 9(Long), 1027(Long), 9(Long), 1028(Long), 9(Long), 1031(Long), 9(Long), 1032(Long), 9(Long), 1033(Long), 9(Long), 2086(Long), 9(Long), 1049(Long), 9(Long), 114(Long), 9(Long), 1055(Long), 9(Long), 2079(Long), 9(Long), 2170(Long)
2022-02-14 10:08:41 [http-nio-8080-exec-27] DEBUG c.y.system.mapper.SysRoleMenuMapper.batchRoleMenu --> <==    Updates: 143
2022-02-14 10:08:41 [schedule-pool-3] DEBUG c.y.system.mapper.SysOperLogMapper.insertOperlog --> ==>  Preparing: insert into sys_oper_log(title, business_type, method, request_method, operator_type, oper_name, dept_name, oper_url, oper_ip, oper_location, oper_param, json_result, status, error_msg, oper_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:08:41 [schedule-pool-3] DEBUG c.y.system.mapper.SysOperLogMapper.insertOperlog --> ==> Parameters: 角色管理(String), 2(Integer), com.yunze.web.controller.system.SysRoleController.edit()(String), PUT(String), 1(Integer), admin(String), null, /system/role(String), 127.0.0.1(String), XX XX(String), {"flag":false,"roleId":9,"admin":false,"dataScope":"1","delFlag":"0","params":{},"roleSort":"9","deptCheckStrictly":true,"createTime":1641954719000,"updateBy":"admin","menuCheckStrictly":true,"roleKey":"testdome","roleName":"演示账号","menuIds":[2125,2027,100,2028,2041,103,101,2000,2012,2013,1,102,104,105,106,108,2,110,3,115,2017,2081,1001,1002,1006,2037,2039,2040,2038,2029,2030,2034,2050,2052,2053,2051,2042,2043,1017,1018,1019,1008,1009,2001,2003,2006,2005,2008,2009,2010,2011,2058,2059,2060,2061,2062,2080,2087,2088,2093,2104,2106,2110,2153,2154,2155,2156,2167,2168,2169,2004,2073,2074,2076,2109,2020,2022,2023,2024,2025,2026,2021,2071,2072,2075,2085,2082,2108,2014,2015,2084,2018,2019,2063,2065,2066,2067,2070,2137,2064,2068,2069,2089,2102,2172,2173,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2190,2191,2192,2193,2194,2195,2196,2197,1013,1014,1015,1021,1022,1023,1026,1027,1028,1031,1032,1033,2086,1049,114,1055,2079,2170],"status":"0"}(String), {"msg":"操作成功","code":200}(String), 0(Integer), null
2022-02-14 10:08:41 [schedule-pool-3] DEBUG c.y.system.mapper.SysOperLogMapper.insertOperlog --> <==    Updates: 1
2022-02-14 10:08:41 [http-nio-8080-exec-6] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark FROM sys_role r LEFT JOIN sys_user_role ur ON ur.role_id = r.role_id LEFT JOIN sys_user u ON u.user_id = ur.user_id LEFT JOIN sys_dept d ON u.dept_id = d.dept_id WHERE r.del_flag = '0') table_count
2022-02-14 10:08:41 [http-nio-8080-exec-6] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> ==> Parameters: 
2022-02-14 10:08:42 [http-nio-8080-exec-6] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> <==      Total: 1
2022-02-14 10:08:42 [http-nio-8080-exec-6] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.del_flag = '0' order by r.role_sort LIMIT ?
2022-02-14 10:08:42 [http-nio-8080-exec-6] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> ==> Parameters: 10(Integer)
2022-02-14 10:08:42 [http-nio-8080-exec-6] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> <==      Total: 9
2022-02-14 10:09:46 [http-nio-8080-exec-4] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==>  Preparing: select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status, r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status from sys_user u left join sys_dept d on u.dept_id = d.dept_id left join sys_user_role ur on u.user_id = ur.user_id left join sys_role r on r.role_id = ur.role_id where u.user_name = ?
2022-02-14 10:09:46 [http-nio-8080-exec-4] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==> Parameters: 5iot(String)
2022-02-14 10:09:46 [http-nio-8080-exec-4] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> <==      Total: 1
2022-02-14 10:09:46 [http-nio-8080-exec-4] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role r on r.role_id = ur.role_id where m.status = '0' and r.status = '0' and ur.user_id = ?
2022-02-14 10:09:46 [http-nio-8080-exec-4] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:09:46 [http-nio-8080-exec-4] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> <==      Total: 121
2022-02-14 10:09:46 [http-nio-8080-exec-4] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==>  Preparing: update sys_user SET dept_id = ?, user_name = ?, nick_name = ?, email = ?, phonenumber = ?, sex = ?, avatar = ?, password = ?, status = ?, login_ip = ?, login_date = ?, remark = ?, update_time = sysdate() where user_id = ?
2022-02-14 10:09:46 [http-nio-8080-exec-4] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==> Parameters: 100(Long), 5iot(String), 演示账号(String), yunye@5iot.cn(String), 17853123033(String), 0(String), /profile/avatar/2022/01/12/86bb5301-5e36-4e6a-bc9c-d83d345ff6e5.jpeg(String), $2a$10$Z03ZGxYMD.p3qk3bKQTQcOCr42DcuDhDVnAa9vgxidpB823psbmSS(String), 0(String), 127.0.0.1(String), 2022-02-14 10:09:46.989(Timestamp), 演示账号(String), 100(Long)
2022-02-14 10:09:47 [schedule-pool-5] INFO  sys-user --> [127.0.0.1]XX XX[5iot][Success][登录成功]
2022-02-14 10:09:47 [schedule-pool-5] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 65406
2022-02-14 10:09:47 [http-nio-8080-exec-4] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> <==    Updates: 1
2022-02-14 10:09:47 [schedule-pool-5] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==>  Preparing: insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time) values (?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:09:47 [schedule-pool-5] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==> Parameters: 5iot(String), 0(String), 127.0.0.1(String), XX XX(String), Firefox 9(String), Windows 10(String), 登录成功(String)
2022-02-14 10:09:47 [schedule-pool-5] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> <==    Updates: 1
2022-02-14 10:09:47 [http-nio-8080-exec-5] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id WHERE r.del_flag = '0' and ur.user_id = ?
2022-02-14 10:09:47 [http-nio-8080-exec-5] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:09:47 [http-nio-8080-exec-5] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> <==      Total: 1
2022-02-14 10:09:47 [http-nio-8080-exec-5] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role r on r.role_id = ur.role_id where m.status = '0' and r.status = '0' and ur.user_id = ?
2022-02-14 10:09:47 [http-nio-8080-exec-5] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:09:47 [http-nio-8080-exec-5] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> <==      Total: 121
2022-02-14 10:09:47 [http-nio-8080-exec-13] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role ro on ur.role_id = ro.role_id left join sys_user u on ur.user_id = u.user_id where u.user_id = ? and m.menu_type in ('M', 'C') and m.status = 0 AND ro.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:09:47 [http-nio-8080-exec-13] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:09:47 [http-nio-8080-exec-13] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> <==      Total: 38
2022-02-14 10:09:49 [http-nio-8080-exec-9] ERROR c.y.framework.web.exception.GlobalExceptionHandler --> 不允许访问
2022-02-14 10:09:49 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver --> Resolved [org.springframework.security.access.AccessDeniedException: 不允许访问]
2022-02-14 10:09:50 [http-nio-8080-exec-30] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:09:50 [http-nio-8080-exec-30] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:09:50 [http-nio-8080-exec-30] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:09:50 [http-nio-8080-exec-30] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:09:50 [http-nio-8080-exec-30] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:09:50 [http-nio-8080-exec-30] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 10:10:00 [RuoyiScheduler_Worker-3] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 10:10:00 [RuoyiScheduler_Worker-3] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 10:10:00 [RuoyiScheduler_Worker-3] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 10:10:00 [RuoyiScheduler_Worker-3] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 10:10:00 [RuoyiScheduler_Worker-3] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 10:10:00 [RuoyiScheduler_Worker-3] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 10:10:00 [RuoyiScheduler_Worker-3] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：104毫秒(String), 0(String)
2022-02-14 10:10:00 [RuoyiScheduler_Worker-3] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 10:10:01 [http-nio-8080-exec-11] ERROR c.y.framework.web.exception.GlobalExceptionHandler --> 不允许访问
2022-02-14 10:10:01 [http-nio-8080-exec-11] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver --> Resolved [org.springframework.security.access.AccessDeniedException: 不允许访问]
2022-02-14 10:10:33 [http-nio-8080-exec-14] DEBUG c.yunze.system.mapper.SysMenuMapper.selectMenuList --> ==>  Preparing: select menu_id, menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, ifnull(perms,'') as perms, icon, create_time from sys_menu order by parent_id, order_num
2022-02-14 10:10:33 [http-nio-8080-exec-14] DEBUG c.yunze.system.mapper.SysMenuMapper.selectMenuList --> ==> Parameters: 
2022-02-14 10:10:33 [http-nio-8080-exec-18] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_id = ?
2022-02-14 10:10:33 [http-nio-8080-exec-18] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==> Parameters: 9(Long)
2022-02-14 10:10:33 [http-nio-8080-exec-18] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> <==      Total: 1
2022-02-14 10:10:33 [http-nio-8080-exec-14] DEBUG c.yunze.system.mapper.SysMenuMapper.selectMenuList --> <==      Total: 198
2022-02-14 10:10:33 [http-nio-8080-exec-14] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_id = ?
2022-02-14 10:10:33 [http-nio-8080-exec-14] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==> Parameters: 9(Long)
2022-02-14 10:10:33 [http-nio-8080-exec-14] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> <==      Total: 1
2022-02-14 10:10:33 [http-nio-8080-exec-14] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuListByRoleId --> ==>  Preparing: select m.menu_id from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id where rm.role_id = ? and m.menu_id not in (select m.parent_id from sys_menu m inner join sys_role_menu rm on m.menu_id = rm.menu_id and rm.role_id = ?) order by m.parent_id, m.order_num
2022-02-14 10:10:33 [http-nio-8080-exec-14] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuListByRoleId --> ==> Parameters: 9(Long), 9(Long)
2022-02-14 10:10:33 [http-nio-8080-exec-14] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuListByRoleId --> <==      Total: 110
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.s.mapper.SysRoleMapper.checkRoleNameUnique --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_name=? limit 1
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.s.mapper.SysRoleMapper.checkRoleNameUnique --> ==> Parameters: 演示账号(String)
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.s.mapper.SysRoleMapper.checkRoleNameUnique --> <==      Total: 1
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.system.mapper.SysRoleMapper.checkRoleKeyUnique --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_key=? limit 1
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.system.mapper.SysRoleMapper.checkRoleKeyUnique --> ==> Parameters: testdome(String)
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.system.mapper.SysRoleMapper.checkRoleKeyUnique --> <==      Total: 1
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG com.yunze.system.mapper.SysRoleMapper.updateRole --> ==>  Preparing: update sys_role SET role_name = ?, role_key = ?, role_sort = ?, data_scope = ?, menu_check_strictly = ?, dept_check_strictly = ?, status = ?, update_by = ?, update_time = sysdate() where role_id = ?
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG com.yunze.system.mapper.SysRoleMapper.updateRole --> ==> Parameters: 演示账号(String), testdome(String), 9(String), 1(String), true(Boolean), true(Boolean), 0(String), admin(String), 9(Long)
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG com.yunze.system.mapper.SysRoleMapper.updateRole --> <==    Updates: 1
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.s.m.SysRoleMenuMapper.deleteRoleMenuByRoleId --> ==>  Preparing: delete from sys_role_menu where role_id=?
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.s.m.SysRoleMenuMapper.deleteRoleMenuByRoleId --> ==> Parameters: 9(Long)
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.s.m.SysRoleMenuMapper.deleteRoleMenuByRoleId --> <==    Updates: 143
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.system.mapper.SysRoleMenuMapper.batchRoleMenu --> ==>  Preparing: insert into sys_role_menu(role_id, menu_id) values
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.system.mapper.SysRoleMenuMapper.batchRoleMenu --> ==> Parameters: 9(Long), 2125(Long), 9(Long), 2027(Long), 9(Long), 100(Long), 9(Long), 2028(Long), 9(Long), 2041(Long), 9(Long), 103(Long), 9(Long), 101(Long), 9(Long), 2000(Long), 9(Long), 2012(Long), 9(Long), 2013(Long), 9(Long), 2172(Long), 9(Long), 1(Long), 9(Long), 102(Long), 9(Long), 104(Long), 9(Long), 105(Long), 9(Long), 106(Long), 9(Long), 108(Long), 9(Long), 2(Long), 9(Long), 110(Long), 9(Long), 3(Long), 9(Long), 115(Long), 9(Long), 2017(Long), 9(Long), 2081(Long), 9(Long), 1001(Long), 9(Long), 1002(Long), 9(Long), 1006(Long), 9(Long), 2037(Long), 9(Long), 2039(Long), 9(Long), 2040(Long), 9(Long), 2038(Long), 9(Long), 2029(Long), 9(Long), 2030(Long), 9(Long), 2034(Long), 9(Long), 2050(Long), 9(Long), 2052(Long), 9(Long), 2053(Long), 9(Long), 2051(Long), 9(Long), 2042(Long), 9(Long), 2043(Long), 9(Long), 1017(Long), 9(Long), 1018(Long), 9(Long), 1019(Long), 9(Long), 1008(Long), 9(Long), 1009(Long), 9(Long), 2001(Long), 9(Long), 2003(Long), 9(Long), 2006(Long), 9(Long), 2005(Long), 9(Long), 2008(Long), 9(Long), 2009(Long), 9(Long), 2010(Long), 9(Long), 2011(Long), 9(Long), 2058(Long), 9(Long), 2059(Long), 9(Long), 2060(Long), 9(Long), 2061(Long), 9(Long), 2062(Long), 9(Long), 2080(Long), 9(Long), 2087(Long), 9(Long), 2088(Long), 9(Long), 2093(Long), 9(Long), 2104(Long), 9(Long), 2106(Long), 9(Long), 2110(Long), 9(Long), 2153(Long), 9(Long), 2154(Long), 9(Long), 2155(Long), 9(Long), 2156(Long), 9(Long), 2167(Long), 9(Long), 2168(Long), 9(Long), 2169(Long), 9(Long), 2004(Long), 9(Long), 2073(Long), 9(Long), 2074(Long), 9(Long), 2076(Long), 9(Long), 2109(Long), 9(Long), 2020(Long), 9(Long), 2022(Long), 9(Long), 2023(Long), 9(Long), 2024(Long), 9(Long), 2025(Long), 9(Long), 2026(Long), 9(Long), 2021(Long), 9(Long), 2071(Long), 9(Long), 2072(Long), 9(Long), 2075(Long), 9(Long), 2085(Long), 9(Long), 2082(Long), 9(Long), 2108(Long), 9(Long), 2014(Long), 9(Long), 2015(Long), 9(Long), 2084(Long), 9(Long), 2018(Long), 9(Long), 2019(Long), 9(Long), 2063(Long), 9(Long), 2065(Long), 9(Long), 2066(Long), 9(Long), 2067(Long), 9(Long), 2070(Long), 9(Long), 2137(Long), 9(Long), 2064(Long), 9(Long), 2068(Long), 9(Long), 2069(Long), 9(Long), 2089(Long), 9(Long), 2102(Long), 9(Long), 2173(Long), 9(Long), 2175(Long), 9(Long), 2176(Long), 9(Long), 2177(Long), 9(Long), 2178(Long), 9(Long), 2179(Long), 9(Long), 2180(Long), 9(Long), 2181(Long), 9(Long), 2182(Long), 9(Long), 2183(Long), 9(Long), 2184(Long), 9(Long), 2185(Long), 9(Long), 2190(Long), 9(Long), 2191(Long), 9(Long), 2192(Long), 9(Long), 2193(Long), 9(Long), 2194(Long), 9(Long), 2195(Long), 9(Long), 2196(Long), 9(Long), 1013(Long), 9(Long), 1014(Long), 9(Long), 1015(Long), 9(Long), 1021(Long), 9(Long), 1022(Long), 9(Long), 1023(Long), 9(Long), 1026(Long), 9(Long), 1027(Long), 9(Long), 1028(Long), 9(Long), 1031(Long), 9(Long), 1032(Long), 9(Long), 1033(Long), 9(Long), 2086(Long), 9(Long), 1049(Long), 9(Long), 114(Long), 9(Long), 1055(Long), 9(Long), 2079(Long), 9(Long), 2170(Long)
2022-02-14 10:10:39 [http-nio-8080-exec-17] DEBUG c.y.system.mapper.SysRoleMenuMapper.batchRoleMenu --> <==    Updates: 142
2022-02-14 10:10:39 [schedule-pool-6] DEBUG c.y.system.mapper.SysOperLogMapper.insertOperlog --> ==>  Preparing: insert into sys_oper_log(title, business_type, method, request_method, operator_type, oper_name, dept_name, oper_url, oper_ip, oper_location, oper_param, json_result, status, error_msg, oper_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:10:39 [schedule-pool-6] DEBUG c.y.system.mapper.SysOperLogMapper.insertOperlog --> ==> Parameters: 角色管理(String), 2(Integer), com.yunze.web.controller.system.SysRoleController.edit()(String), PUT(String), 1(Integer), admin(String), null, /system/role(String), 127.0.0.1(String), XX XX(String), {"flag":false,"roleId":9,"admin":false,"dataScope":"1","delFlag":"0","params":{},"roleSort":"9","deptCheckStrictly":true,"createTime":1641954719000,"updateBy":"admin","menuCheckStrictly":true,"roleKey":"testdome","roleName":"演示账号","menuIds":[2125,2027,100,2028,2041,103,101,2000,2012,2013,2172,1,102,104,105,106,108,2,110,3,115,2017,2081,1001,1002,1006,2037,2039,2040,2038,2029,2030,2034,2050,2052,2053,2051,2042,2043,1017,1018,1019,1008,1009,2001,2003,2006,2005,2008,2009,2010,2011,2058,2059,2060,2061,2062,2080,2087,2088,2093,2104,2106,2110,2153,2154,2155,2156,2167,2168,2169,2004,2073,2074,2076,2109,2020,2022,2023,2024,2025,2026,2021,2071,2072,2075,2085,2082,2108,2014,2015,2084,2018,2019,2063,2065,2066,2067,2070,2137,2064,2068,2069,2089,2102,2173,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2190,2191,2192,2193,2194,2195,2196,1013,1014,1015,1021,1022,1023,1026,1027,1028,1031,1032,1033,2086,1049,114,1055,2079,2170],"status":"0"}(String), {"msg":"操作成功","code":200}(String), 0(Integer), null
2022-02-14 10:10:39 [schedule-pool-6] DEBUG c.y.system.mapper.SysOperLogMapper.insertOperlog --> <==    Updates: 1
2022-02-14 10:10:40 [http-nio-8080-exec-10] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark FROM sys_role r LEFT JOIN sys_user_role ur ON ur.role_id = r.role_id LEFT JOIN sys_user u ON u.user_id = ur.user_id LEFT JOIN sys_dept d ON u.dept_id = d.dept_id WHERE r.del_flag = '0') table_count
2022-02-14 10:10:40 [http-nio-8080-exec-10] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> ==> Parameters: 
2022-02-14 10:10:40 [http-nio-8080-exec-10] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> <==      Total: 1
2022-02-14 10:10:40 [http-nio-8080-exec-10] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.del_flag = '0' order by r.role_sort LIMIT ?
2022-02-14 10:10:40 [http-nio-8080-exec-10] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> ==> Parameters: 10(Integer)
2022-02-14 10:10:40 [http-nio-8080-exec-10] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> <==      Total: 9
2022-02-14 10:10:46 [http-nio-8080-exec-15] ERROR c.y.framework.web.exception.GlobalExceptionHandler --> 不允许访问
2022-02-14 10:10:46 [http-nio-8080-exec-15] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver --> Resolved [org.springframework.security.access.AccessDeniedException: 不允许访问]
2022-02-14 10:10:54 [http-nio-8080-exec-19] DEBUG c.yunze.system.mapper.SysMenuMapper.selectMenuList --> ==>  Preparing: select menu_id, menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, ifnull(perms,'') as perms, icon, create_time from sys_menu order by parent_id, order_num
2022-02-14 10:10:54 [http-nio-8080-exec-19] DEBUG c.yunze.system.mapper.SysMenuMapper.selectMenuList --> ==> Parameters: 
2022-02-14 10:10:54 [http-nio-8080-exec-19] DEBUG c.yunze.system.mapper.SysMenuMapper.selectMenuList --> <==      Total: 198
2022-02-14 10:10:54 [http-nio-8080-exec-19] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_id = ?
2022-02-14 10:10:54 [http-nio-8080-exec-19] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==> Parameters: 9(Long)
2022-02-14 10:10:54 [http-nio-8080-exec-19] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> <==      Total: 1
2022-02-14 10:10:54 [http-nio-8080-exec-19] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuListByRoleId --> ==>  Preparing: select m.menu_id from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id where rm.role_id = ? and m.menu_id not in (select m.parent_id from sys_menu m inner join sys_role_menu rm on m.menu_id = rm.menu_id and rm.role_id = ?) order by m.parent_id, m.order_num
2022-02-14 10:10:54 [http-nio-8080-exec-19] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuListByRoleId --> ==> Parameters: 9(Long), 9(Long)
2022-02-14 10:10:54 [http-nio-8080-exec-19] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuListByRoleId --> <==      Total: 109
2022-02-14 10:10:54 [http-nio-8080-exec-23] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_id = ?
2022-02-14 10:10:54 [http-nio-8080-exec-23] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> ==> Parameters: 9(Long)
2022-02-14 10:10:54 [http-nio-8080-exec-23] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleById --> <==      Total: 1
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG c.y.s.mapper.SysRoleMapper.checkRoleNameUnique --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_name=? limit 1
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG c.y.s.mapper.SysRoleMapper.checkRoleNameUnique --> ==> Parameters: 演示账号(String)
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG c.y.s.mapper.SysRoleMapper.checkRoleNameUnique --> <==      Total: 1
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG c.y.system.mapper.SysRoleMapper.checkRoleKeyUnique --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.role_key=? limit 1
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG c.y.system.mapper.SysRoleMapper.checkRoleKeyUnique --> ==> Parameters: testdome(String)
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG c.y.system.mapper.SysRoleMapper.checkRoleKeyUnique --> <==      Total: 1
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG com.yunze.system.mapper.SysRoleMapper.updateRole --> ==>  Preparing: update sys_role SET role_name = ?, role_key = ?, role_sort = ?, data_scope = ?, menu_check_strictly = ?, dept_check_strictly = ?, status = ?, update_by = ?, update_time = sysdate() where role_id = ?
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG com.yunze.system.mapper.SysRoleMapper.updateRole --> ==> Parameters: 演示账号(String), testdome(String), 9(String), 1(String), true(Boolean), true(Boolean), 0(String), admin(String), 9(Long)
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG com.yunze.system.mapper.SysRoleMapper.updateRole --> <==    Updates: 1
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG c.y.s.m.SysRoleMenuMapper.deleteRoleMenuByRoleId --> ==>  Preparing: delete from sys_role_menu where role_id=?
2022-02-14 10:11:02 [http-nio-8080-exec-21] DEBUG c.y.s.m.SysRoleMenuMapper.deleteRoleMenuByRoleId --> ==> Parameters: 9(Long)
2022-02-14 10:11:03 [http-nio-8080-exec-21] DEBUG c.y.s.m.SysRoleMenuMapper.deleteRoleMenuByRoleId --> <==    Updates: 142
2022-02-14 10:11:03 [http-nio-8080-exec-21] DEBUG c.y.system.mapper.SysRoleMenuMapper.batchRoleMenu --> ==>  Preparing: insert into sys_role_menu(role_id, menu_id) values
2022-02-14 10:11:03 [http-nio-8080-exec-21] DEBUG c.y.system.mapper.SysRoleMenuMapper.batchRoleMenu --> ==> Parameters: 9(Long), 2125(Long), 9(Long), 2027(Long), 9(Long), 100(Long), 9(Long), 2028(Long), 9(Long), 2041(Long), 9(Long), 103(Long), 9(Long), 101(Long), 9(Long), 2000(Long), 9(Long), 2012(Long), 9(Long), 2013(Long), 9(Long), 2172(Long), 9(Long), 1(Long), 9(Long), 102(Long), 9(Long), 104(Long), 9(Long), 105(Long), 9(Long), 106(Long), 9(Long), 108(Long), 9(Long), 2(Long), 9(Long), 110(Long), 9(Long), 3(Long), 9(Long), 115(Long), 9(Long), 2017(Long), 9(Long), 2081(Long), 9(Long), 1001(Long), 9(Long), 1002(Long), 9(Long), 1006(Long), 9(Long), 2037(Long), 9(Long), 2039(Long), 9(Long), 2040(Long), 9(Long), 2038(Long), 9(Long), 2029(Long), 9(Long), 2030(Long), 9(Long), 2034(Long), 9(Long), 2050(Long), 9(Long), 2052(Long), 9(Long), 2053(Long), 9(Long), 2051(Long), 9(Long), 2042(Long), 9(Long), 2043(Long), 9(Long), 1017(Long), 9(Long), 1018(Long), 9(Long), 1019(Long), 9(Long), 1008(Long), 9(Long), 1009(Long), 9(Long), 2001(Long), 9(Long), 2003(Long), 9(Long), 2006(Long), 9(Long), 2005(Long), 9(Long), 2008(Long), 9(Long), 2009(Long), 9(Long), 2010(Long), 9(Long), 2011(Long), 9(Long), 2058(Long), 9(Long), 2059(Long), 9(Long), 2060(Long), 9(Long), 2061(Long), 9(Long), 2062(Long), 9(Long), 2080(Long), 9(Long), 2087(Long), 9(Long), 2088(Long), 9(Long), 2093(Long), 9(Long), 2104(Long), 9(Long), 2106(Long), 9(Long), 2110(Long), 9(Long), 2153(Long), 9(Long), 2154(Long), 9(Long), 2155(Long), 9(Long), 2156(Long), 9(Long), 2167(Long), 9(Long), 2168(Long), 9(Long), 2169(Long), 9(Long), 2004(Long), 9(Long), 2073(Long), 9(Long), 2074(Long), 9(Long), 2076(Long), 9(Long), 2109(Long), 9(Long), 2020(Long), 9(Long), 2022(Long), 9(Long), 2023(Long), 9(Long), 2024(Long), 9(Long), 2025(Long), 9(Long), 2026(Long), 9(Long), 2021(Long), 9(Long), 2071(Long), 9(Long), 2072(Long), 9(Long), 2075(Long), 9(Long), 2085(Long), 9(Long), 2082(Long), 9(Long), 2108(Long), 9(Long), 2014(Long), 9(Long), 2015(Long), 9(Long), 2084(Long), 9(Long), 2018(Long), 9(Long), 2019(Long), 9(Long), 2063(Long), 9(Long), 2065(Long), 9(Long), 2066(Long), 9(Long), 2067(Long), 9(Long), 2070(Long), 9(Long), 2137(Long), 9(Long), 2064(Long), 9(Long), 2068(Long), 9(Long), 2069(Long), 9(Long), 2089(Long), 9(Long), 2102(Long), 9(Long), 2173(Long), 9(Long), 2175(Long), 9(Long), 2176(Long), 9(Long), 2177(Long), 9(Long), 2178(Long), 9(Long), 2179(Long), 9(Long), 2180(Long), 9(Long), 2181(Long), 9(Long), 2182(Long), 9(Long), 2183(Long), 9(Long), 2184(Long), 9(Long), 2185(Long), 9(Long), 2190(Long), 9(Long), 2191(Long), 9(Long), 2192(Long), 9(Long), 2193(Long), 9(Long), 2194(Long), 9(Long), 2195(Long), 9(Long), 1013(Long), 9(Long), 1014(Long), 9(Long), 1015(Long), 9(Long), 1021(Long), 9(Long), 1022(Long), 9(Long), 1023(Long), 9(Long), 1026(Long), 9(Long), 1027(Long), 9(Long), 1028(Long), 9(Long), 1031(Long), 9(Long), 1032(Long), 9(Long), 1033(Long), 9(Long), 2086(Long), 9(Long), 1049(Long), 9(Long), 114(Long), 9(Long), 1055(Long), 9(Long), 2079(Long), 9(Long), 2170(Long)
2022-02-14 10:11:03 [http-nio-8080-exec-21] DEBUG c.y.system.mapper.SysRoleMenuMapper.batchRoleMenu --> <==    Updates: 141
2022-02-14 10:11:03 [schedule-pool-2] DEBUG c.y.system.mapper.SysOperLogMapper.insertOperlog --> ==>  Preparing: insert into sys_oper_log(title, business_type, method, request_method, operator_type, oper_name, dept_name, oper_url, oper_ip, oper_location, oper_param, json_result, status, error_msg, oper_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:11:03 [schedule-pool-2] DEBUG c.y.system.mapper.SysOperLogMapper.insertOperlog --> ==> Parameters: 角色管理(String), 2(Integer), com.yunze.web.controller.system.SysRoleController.edit()(String), PUT(String), 1(Integer), admin(String), null, /system/role(String), 127.0.0.1(String), XX XX(String), {"flag":false,"roleId":9,"admin":false,"dataScope":"1","delFlag":"0","params":{},"roleSort":"9","deptCheckStrictly":true,"createTime":1641954719000,"updateBy":"admin","menuCheckStrictly":true,"roleKey":"testdome","roleName":"演示账号","menuIds":[2125,2027,100,2028,2041,103,101,2000,2012,2013,2172,1,102,104,105,106,108,2,110,3,115,2017,2081,1001,1002,1006,2037,2039,2040,2038,2029,2030,2034,2050,2052,2053,2051,2042,2043,1017,1018,1019,1008,1009,2001,2003,2006,2005,2008,2009,2010,2011,2058,2059,2060,2061,2062,2080,2087,2088,2093,2104,2106,2110,2153,2154,2155,2156,2167,2168,2169,2004,2073,2074,2076,2109,2020,2022,2023,2024,2025,2026,2021,2071,2072,2075,2085,2082,2108,2014,2015,2084,2018,2019,2063,2065,2066,2067,2070,2137,2064,2068,2069,2089,2102,2173,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2190,2191,2192,2193,2194,2195,1013,1014,1015,1021,1022,1023,1026,1027,1028,1031,1032,1033,2086,1049,114,1055,2079,2170],"status":"0"}(String), {"msg":"操作成功","code":200}(String), 0(Integer), null
2022-02-14 10:11:03 [schedule-pool-2] DEBUG c.y.system.mapper.SysOperLogMapper.insertOperlog --> <==    Updates: 1
2022-02-14 10:11:03 [http-nio-8080-exec-25] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> ==>  Preparing: SELECT count(0) FROM (SELECT DISTINCT r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark FROM sys_role r LEFT JOIN sys_user_role ur ON ur.role_id = r.role_id LEFT JOIN sys_user u ON u.user_id = ur.user_id LEFT JOIN sys_dept d ON u.dept_id = d.dept_id WHERE r.del_flag = '0') table_count
2022-02-14 10:11:03 [http-nio-8080-exec-25] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> ==> Parameters: 
2022-02-14 10:11:03 [http-nio-8080-exec-25] DEBUG c.y.s.mapper.SysRoleMapper.selectRoleList_COUNT --> <==      Total: 1
2022-02-14 10:11:03 [http-nio-8080-exec-25] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id where r.del_flag = '0' order by r.role_sort LIMIT ?
2022-02-14 10:11:03 [http-nio-8080-exec-25] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> ==> Parameters: 10(Integer)
2022-02-14 10:11:03 [http-nio-8080-exec-25] DEBUG c.yunze.system.mapper.SysRoleMapper.selectRoleList --> <==      Total: 9
2022-02-14 10:11:08 [http-nio-8080-exec-24] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id WHERE r.del_flag = '0' and ur.user_id = ?
2022-02-14 10:11:08 [http-nio-8080-exec-24] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:11:08 [http-nio-8080-exec-24] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> <==      Total: 1
2022-02-14 10:11:08 [http-nio-8080-exec-24] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role r on r.role_id = ur.role_id where m.status = '0' and r.status = '0' and ur.user_id = ?
2022-02-14 10:11:08 [http-nio-8080-exec-24] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:11:08 [http-nio-8080-exec-24] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> <==      Total: 119
2022-02-14 10:11:08 [http-nio-8080-exec-28] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role ro on ur.role_id = ro.role_id left join sys_user u on ur.user_id = u.user_id where u.user_id = ? and m.menu_type in ('M', 'C') and m.status = 0 AND ro.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:11:08 [http-nio-8080-exec-28] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:11:08 [http-nio-8080-exec-28] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> <==      Total: 38
2022-02-14 10:11:10 [http-nio-8080-exec-29] ERROR c.y.framework.web.exception.GlobalExceptionHandler --> 不允许访问
2022-02-14 10:11:10 [http-nio-8080-exec-29] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver --> Resolved [org.springframework.security.access.AccessDeniedException: 不允许访问]
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.y.c.YzWxByProductAgentMapper.findConfig --> ==>  Preparing: SELECT config_value FROM sys_config WHERE config_key = ?
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.y.c.YzWxByProductAgentMapper.findConfig --> ==> Parameters: IndexpageCacheTime(String)
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.y.c.YzWxByProductAgentMapper.findConfig --> <==      Total: 1
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 0
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> ==>  Preparing: select id , downCount , overdoseCount , expiringSoonCount , thresholdReachedCount , simCardCount , simCardNewCount , currentMonth , simActivity , CONVERT(lifeCycleDistribution USING utf8mb4) AS 'lifeCycleDistribution', CONVERT(businessVolumeFlow USING utf8mb4) AS 'businessVolumeFlow', CONVERT(businessVolumeVoice USING utf8mb4) AS 'businessVolumeVoice', CONVERT(businessVolumeMessage USING utf8mb4) AS 'businessVolumeMessage', customerCount , customerNewCount , salesContractCount , salesContractDepositCount , weChatOrderCollection , orderAmount , systemCliqueCount , systemUserCount , activationCardCount , shipCard , logInIp , DATE_FORMAT(create_date,'%Y-%m-%d %H:%i:%S') as create_date, DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S') as update_date, DATE_FORMAT(record_date,'%Y-%m-%d') as record_date, dept_id, CONVERT(requestMap USING utf8mb4) AS 'requestMap' from yz_indexpage WHERE id = ? LIMIT 1
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> ==> Parameters: 72(Integer)
2022-02-14 10:11:10 [http-nio-8080-exec-7] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> <==      Total: 1
2022-02-14 10:11:23 [schedule-pool-1] INFO  sys-user --> [127.0.0.1]XX XX[5iot][Logout][退出成功]
2022-02-14 10:11:23 [schedule-pool-1] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==>  Preparing: insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time) values (?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:11:23 [schedule-pool-1] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==> Parameters: 5iot(String), 0(String), 127.0.0.1(String), XX XX(String), Firefox 9(String), Windows 10(String), 退出成功(String)
2022-02-14 10:11:23 [schedule-pool-1] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> <==    Updates: 1
2022-02-14 10:11:31 [http-nio-8080-exec-1] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==>  Preparing: select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status, r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status from sys_user u left join sys_dept d on u.dept_id = d.dept_id left join sys_user_role ur on u.user_id = ur.user_id left join sys_role r on r.role_id = ur.role_id where u.user_name = ?
2022-02-14 10:11:31 [http-nio-8080-exec-1] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> ==> Parameters: 5iot(String)
2022-02-14 10:11:31 [http-nio-8080-exec-1] DEBUG c.y.s.mapper.SysUserMapper.selectUserByUserName --> <==      Total: 1
2022-02-14 10:11:31 [http-nio-8080-exec-1] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role r on r.role_id = ur.role_id where m.status = '0' and r.status = '0' and ur.user_id = ?
2022-02-14 10:11:31 [http-nio-8080-exec-1] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:11:31 [http-nio-8080-exec-1] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> <==      Total: 119
2022-02-14 10:11:31 [http-nio-8080-exec-1] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==>  Preparing: update sys_user SET dept_id = ?, user_name = ?, nick_name = ?, email = ?, phonenumber = ?, sex = ?, avatar = ?, password = ?, status = ?, login_ip = ?, login_date = ?, remark = ?, update_time = sysdate() where user_id = ?
2022-02-14 10:11:31 [http-nio-8080-exec-1] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> ==> Parameters: 100(Long), 5iot(String), 演示账号(String), yunye@5iot.cn(String), 17853123033(String), 0(String), /profile/avatar/2022/01/12/86bb5301-5e36-4e6a-bc9c-d83d345ff6e5.jpeg(String), $2a$10$Z03ZGxYMD.p3qk3bKQTQcOCr42DcuDhDVnAa9vgxidpB823psbmSS(String), 0(String), 127.0.0.1(String), 2022-02-14 10:11:31.445(Timestamp), 演示账号(String), 100(Long)
2022-02-14 10:11:31 [schedule-pool-7] INFO  sys-user --> [127.0.0.1]XX XX[5iot][Success][登录成功]
2022-02-14 10:11:31 [schedule-pool-7] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==>  Preparing: insert into sys_logininfor (user_name, status, ipaddr, login_location, browser, os, msg, login_time) values (?, ?, ?, ?, ?, ?, ?, sysdate())
2022-02-14 10:11:31 [schedule-pool-7] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> ==> Parameters: 5iot(String), 0(String), 127.0.0.1(String), XX XX(String), Firefox 9(String), Windows 10(String), 登录成功(String)
2022-02-14 10:11:31 [http-nio-8080-exec-1] DEBUG com.yunze.system.mapper.SysUserMapper.updateUser --> <==    Updates: 1
2022-02-14 10:11:31 [schedule-pool-7] DEBUG c.y.s.mapper.SysLogininforMapper.insertLogininfor --> <==    Updates: 1
2022-02-14 10:11:31 [http-nio-8080-exec-2] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id WHERE r.del_flag = '0' and ur.user_id = ?
2022-02-14 10:11:31 [http-nio-8080-exec-2] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:11:31 [http-nio-8080-exec-2] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> <==      Total: 1
2022-02-14 10:11:31 [http-nio-8080-exec-2] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role r on r.role_id = ur.role_id where m.status = '0' and r.status = '0' and ur.user_id = ?
2022-02-14 10:11:31 [http-nio-8080-exec-2] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:11:31 [http-nio-8080-exec-2] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> <==      Total: 119
2022-02-14 10:11:31 [http-nio-8080-exec-20] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role ro on ur.role_id = ro.role_id left join sys_user u on ur.user_id = u.user_id where u.user_id = ? and m.menu_type in ('M', 'C') and m.status = 0 AND ro.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:11:31 [http-nio-8080-exec-20] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:11:31 [http-nio-8080-exec-20] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> <==      Total: 38
2022-02-14 10:11:33 [http-nio-8080-exec-12] ERROR c.y.framework.web.exception.GlobalExceptionHandler --> 不允许访问
2022-02-14 10:11:33 [http-nio-8080-exec-12] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver --> Resolved [org.springframework.security.access.AccessDeniedException: 不允许访问]
2022-02-14 10:11:34 [http-nio-8080-exec-6] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:11:34 [http-nio-8080-exec-6] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:11:34 [http-nio-8080-exec-6] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:11:34 [http-nio-8080-exec-6] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:11:34 [http-nio-8080-exec-6] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:11:34 [http-nio-8080-exec-6] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 10:12:06 [http-nio-8080-exec-4] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==>  Preparing: select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.status, r.del_flag, r.create_time, r.remark from sys_role r left join sys_user_role ur on ur.role_id = r.role_id left join sys_user u on u.user_id = ur.user_id left join sys_dept d on u.dept_id = d.dept_id WHERE r.del_flag = '0' and ur.user_id = ?
2022-02-14 10:12:06 [http-nio-8080-exec-4] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:12:06 [http-nio-8080-exec-4] DEBUG c.y.s.m.SysRoleMapper.selectRolePermissionByUserId --> <==      Total: 1
2022-02-14 10:12:06 [http-nio-8080-exec-4] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role r on r.role_id = ur.role_id where m.status = '0' and r.status = '0' and ur.user_id = ?
2022-02-14 10:12:06 [http-nio-8080-exec-4] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:12:06 [http-nio-8080-exec-4] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuPermsByUserId --> <==      Total: 119
2022-02-14 10:12:07 [http-nio-8080-exec-5] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id left join sys_role ro on ur.role_id = ro.role_id left join sys_user u on ur.user_id = u.user_id where u.user_id = ? and m.menu_type in ('M', 'C') and m.status = 0 AND ro.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:12:07 [http-nio-8080-exec-5] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> ==> Parameters: 100(Long)
2022-02-14 10:12:07 [http-nio-8080-exec-5] DEBUG c.y.s.mapper.SysMenuMapper.selectMenuTreeByUserId --> <==      Total: 38
2022-02-14 10:12:10 [http-nio-8080-exec-9] ERROR c.y.framework.web.exception.GlobalExceptionHandler --> 不允许访问
2022-02-14 10:12:10 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver --> Resolved [org.springframework.security.access.AccessDeniedException: 不允许访问]
2022-02-14 10:12:10 [http-nio-8080-exec-8] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:12:10 [http-nio-8080-exec-8] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:12:11 [http-nio-8080-exec-8] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:12:11 [http-nio-8080-exec-8] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:12:11 [http-nio-8080-exec-8] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:12:11 [http-nio-8080-exec-8] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 10:15:00 [RuoyiScheduler_Worker-4] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 209400
2022-02-14 10:15:01 [RuoyiScheduler_Worker-4] DEBUG c.y.apiCommon.mapper.YzCardRouteMapper.findRouteID --> ==>  Preparing: SELECT cd_id, cd_code, cd_name, cd_username, cd_pwd, cd_key, cd_status, cd_concurrency, cd_control_type FROM yz_card_route WHERE cd_lunxun = '1' and cd_status = '1'
2022-02-14 10:15:01 [RuoyiScheduler_Worker-4] DEBUG c.y.apiCommon.mapper.YzCardRouteMapper.findRouteID --> ==> Parameters: 
2022-02-14 10:15:01 [RuoyiScheduler_Worker-4] DEBUG c.y.apiCommon.mapper.YzCardRouteMapper.findRouteID --> <==      Total: 1
2022-02-14 10:15:01 [RuoyiScheduler_Worker-4] DEBUG c.y.c.m.yunze.YzCardMapper.findChannelIdCarStop --> ==>  Preparing: SELECT iccid, msisdn AS card_no, remind_ratio, used, status_ShowId as 'status_id', DATE_FORMAT( syn_Time, "%Y-%m-%d" ) AS syn_Time FROM yz_card_info WHERE channel_id = ? and remind_ratio!='' ORDER BY used desc, syn_Time asc, card_no
2022-02-14 10:15:01 [RuoyiScheduler_Worker-4] DEBUG c.y.c.m.yunze.YzCardMapper.findChannelIdCarStop --> ==> Parameters: 1(String)
2022-02-14 10:15:01 [RuoyiScheduler_Worker-4] DEBUG c.y.c.m.yunze.YzCardMapper.findChannelIdCarStop --> <==      Total: 0
2022-02-14 10:15:01 [RuoyiScheduler_Worker-4] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 10:15:01 [RuoyiScheduler_Worker-4] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 达量停机(String), POLLING(String), cardStopTask.pollingCardStop(60)(String), 达量停机 总共耗时：270毫秒(String), 0(String)
2022-02-14 10:15:01 [RuoyiScheduler_Worker-4] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 10:19:14 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_MisfireHandler] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 252589
2022-02-14 10:20:00 [RuoyiScheduler_Worker-5] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 10:20:00 [RuoyiScheduler_Worker-5] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 10:20:00 [RuoyiScheduler_Worker-5] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type = ? and b.activate_date <= now()
2022-02-14 10:20:00 [RuoyiScheduler_Worker-5] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 10:20:00 [RuoyiScheduler_Worker-5] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 10:20:00 [RuoyiScheduler_Worker-5] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 10:20:00 [RuoyiScheduler_Worker-5] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.activationAddPackageProductionAndActivateDate(180)(String), 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去 总共耗时：112毫秒(String), 0(String)
2022-02-14 10:20:00 [RuoyiScheduler_Worker-5] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 10:23:07 [http-nio-8080-exec-11] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:23:07 [http-nio-8080-exec-11] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 10:23:07 [http-nio-8080-exec-11] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 10:23:10 [http-nio-8080-exec-18] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:23:10 [http-nio-8080-exec-18] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:23:10 [http-nio-8080-exec-18] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:23:10 [http-nio-8080-exec-18] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:23:10 [http-nio-8080-exec-18] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:23:10 [http-nio-8080-exec-18] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 1
2022-02-14 10:26:01 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 360657
2022-02-14 10:26:54 [http-nio-8080-exec-16] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:26:54 [http-nio-8080-exec-16] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 10:26:54 [http-nio-8080-exec-16] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 10:26:55 [http-nio-8080-exec-23] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:26:55 [http-nio-8080-exec-23] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:26:55 [http-nio-8080-exec-23] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:26:55 [http-nio-8080-exec-23] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:26:55 [http-nio-8080-exec-23] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:26:55 [http-nio-8080-exec-23] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 0
2022-02-14 10:26:55 [http-nio-8080-exec-23] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> ==>  Preparing: select id , downCount , overdoseCount , expiringSoonCount , thresholdReachedCount , simCardCount , simCardNewCount , currentMonth , simActivity , CONVERT(lifeCycleDistribution USING utf8mb4) AS 'lifeCycleDistribution', CONVERT(businessVolumeFlow USING utf8mb4) AS 'businessVolumeFlow', CONVERT(businessVolumeVoice USING utf8mb4) AS 'businessVolumeVoice', CONVERT(businessVolumeMessage USING utf8mb4) AS 'businessVolumeMessage', customerCount , customerNewCount , salesContractCount , salesContractDepositCount , weChatOrderCollection , orderAmount , systemCliqueCount , systemUserCount , activationCardCount , shipCard , logInIp , DATE_FORMAT(create_date,'%Y-%m-%d %H:%i:%S') as create_date, DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S') as update_date, DATE_FORMAT(record_date,'%Y-%m-%d') as record_date, dept_id, CONVERT(requestMap USING utf8mb4) AS 'requestMap' from yz_indexpage WHERE id = ? LIMIT 1
2022-02-14 10:26:55 [http-nio-8080-exec-23] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> ==> Parameters: 72(Integer)
2022-02-14 10:26:55 [http-nio-8080-exec-23] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> <==      Total: 1
2022-02-14 10:28:02 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_MisfireHandler] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 120336
2022-02-14 10:30:00 [RuoyiScheduler_Worker-6] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 118418
2022-02-14 10:30:00 [RuoyiScheduler_Worker-6] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 10:30:00 [RuoyiScheduler_Worker-6] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 10:30:00 [RuoyiScheduler_Worker-6] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 10:30:00 [RuoyiScheduler_Worker-6] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 10:30:00 [RuoyiScheduler_Worker-6] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 10:30:00 [RuoyiScheduler_Worker-6] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 10:30:00 [RuoyiScheduler_Worker-6] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：277毫秒(String), 0(String)
2022-02-14 10:30:01 [RuoyiScheduler_Worker-6] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 10:33:33 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 212451
2022-02-14 10:35:00 [RuoyiScheduler_Worker-7] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 86624
2022-02-14 10:35:00 [RuoyiScheduler_Worker-7] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 10:35:00 [RuoyiScheduler_Worker-7] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 10:35:00 [RuoyiScheduler_Worker-7] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 10:35:00 [RuoyiScheduler_Worker-7] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 10:35:00 [RuoyiScheduler_Worker-7] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 10:35:00 [RuoyiScheduler_Worker-7] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 10:35:00 [RuoyiScheduler_Worker-7] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：281毫秒(String), 0(String)
2022-02-14 10:35:00 [RuoyiScheduler_Worker-7] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 10:39:38 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_MisfireHandler] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 229364
2022-02-14 10:40:00 [RuoyiScheduler_Worker-8] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 10:40:00 [RuoyiScheduler_Worker-8] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 10:40:00 [RuoyiScheduler_Worker-8] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type = ? and b.activate_date <= now()
2022-02-14 10:40:00 [RuoyiScheduler_Worker-8] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 10:40:00 [RuoyiScheduler_Worker-8] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 10:40:00 [RuoyiScheduler_Worker-8] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 10:40:00 [RuoyiScheduler_Worker-8] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.activationAddPackageProductionAndActivateDate(180)(String), 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去 总共耗时：116毫秒(String), 0(String)
2022-02-14 10:40:00 [RuoyiScheduler_Worker-8] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 10:45:00 [RuoyiScheduler_Worker-9] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 299802
2022-02-14 10:45:00 [RuoyiScheduler_Worker-9] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 10:45:00 [RuoyiScheduler_Worker-9] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 10:45:00 [RuoyiScheduler_Worker-9] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 10:45:00 [RuoyiScheduler_Worker-9] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 10:45:00 [RuoyiScheduler_Worker-9] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 10:45:00 [RuoyiScheduler_Worker-9] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 10:45:00 [RuoyiScheduler_Worker-9] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：265毫秒(String), 0(String)
2022-02-14 10:45:01 [RuoyiScheduler_Worker-9] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 10:49:39 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_MisfireHandler] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 277812
2022-02-14 10:50:46 [http-nio-8080-exec-12] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==>  Preparing: select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0 order by m.parent_id, m.order_num
2022-02-14 10:50:46 [http-nio-8080-exec-12] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> ==> Parameters: 
2022-02-14 10:50:46 [http-nio-8080-exec-12] DEBUG c.y.system.mapper.SysMenuMapper.selectMenuTreeAll --> <==      Total: 46
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? order by update_date desc LIMIT 1
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> ==> Parameters: 2022-02-13(String), 100(Long)
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findExist --> <==      Total: 1
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.y.c.YzWxByProductAgentMapper.findConfig --> ==>  Preparing: SELECT config_value FROM sys_config WHERE config_key = ?
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.y.c.YzWxByProductAgentMapper.findConfig --> ==> Parameters: IndexpageCacheTime(String)
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.y.c.YzWxByProductAgentMapper.findConfig --> <==      Total: 1
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==>  Preparing: select id from yz_indexpage WHERE DATE_FORMAT( record_date , '%Y-%m-%d' ) = ? and dept_id = ? and (round((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S')))/60) <= ? )=1 order by update_date desc LIMIT 1
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> ==> Parameters: 2022-02-13(String), 100(Long), 15(String)
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.y.s.YzIndexpageMapper.findEffectiveTime --> <==      Total: 0
2022-02-14 10:50:48 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 69252
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> ==>  Preparing: select id , downCount , overdoseCount , expiringSoonCount , thresholdReachedCount , simCardCount , simCardNewCount , currentMonth , simActivity , CONVERT(lifeCycleDistribution USING utf8mb4) AS 'lifeCycleDistribution', CONVERT(businessVolumeFlow USING utf8mb4) AS 'businessVolumeFlow', CONVERT(businessVolumeVoice USING utf8mb4) AS 'businessVolumeVoice', CONVERT(businessVolumeMessage USING utf8mb4) AS 'businessVolumeMessage', customerCount , customerNewCount , salesContractCount , salesContractDepositCount , weChatOrderCollection , orderAmount , systemCliqueCount , systemUserCount , activationCardCount , shipCard , logInIp , DATE_FORMAT(create_date,'%Y-%m-%d %H:%i:%S') as create_date, DATE_FORMAT(update_date,'%Y-%m-%d %H:%i:%S') as update_date, DATE_FORMAT(record_date,'%Y-%m-%d') as record_date, dept_id, CONVERT(requestMap USING utf8mb4) AS 'requestMap' from yz_indexpage WHERE id = ? LIMIT 1
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> ==> Parameters: 72(Integer)
2022-02-14 10:50:48 [http-nio-8080-exec-4] DEBUG c.y.c.m.yunze.sysgl.YzIndexpageMapper.findToDay --> <==      Total: 1
2022-02-14 10:53:02 [http-nio-8080-exec-30] DEBUG c.y.c.m.yunze.YzCardFlowMapper.queryPackage_simple --> ==>  Preparing: SELECT package_id, package_agentname FROM yz_card_package
2022-02-14 10:53:02 [http-nio-8080-exec-30] DEBUG c.y.c.m.yunze.YzCardFlowMapper.queryPackage_simple --> ==> Parameters: 
2022-02-14 10:53:02 [http-nio-8080-exec-30] DEBUG c.y.c.m.yunze.YzCardFlowMapper.queryPackage_simple --> <==      Total: 1
2022-02-14 10:53:03 [http-nio-8080-exec-29] DEBUG com.yunze.system.mapper.SysDeptMapper.getDeptName --> ==>  Preparing: select dept_id,dname as 'dept_name' from sys_dept
2022-02-14 10:53:03 [http-nio-8080-exec-29] DEBUG com.yunze.system.mapper.SysDeptMapper.getDeptName --> ==> Parameters: 
2022-02-14 10:53:03 [http-nio-8080-exec-29] DEBUG com.yunze.system.mapper.SysDeptMapper.getDeptName --> <==      Total: 1
2022-02-14 10:53:03 [http-nio-8080-exec-7] DEBUG c.yunze.apiCommon.mapper.YzCardRouteMapper.find_sp --> ==>  Preparing: SELECT cd_id, cd_alias FROM yz_card_route ORDER BY cd_alias ASC,cd_id
2022-02-14 10:53:03 [http-nio-8080-exec-7] DEBUG c.yunze.apiCommon.mapper.YzCardRouteMapper.find_sp --> ==> Parameters: 
2022-02-14 10:53:03 [http-nio-8080-exec-7] DEBUG c.yunze.apiCommon.mapper.YzCardRouteMapper.find_sp --> <==      Total: 1
2022-02-14 10:53:04 [http-nio-8080-exec-3] DEBUG c.yunze.system.mapper.SysDeptMapper.selectDeptList --> ==>  Preparing: select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time,d.dname from sys_dept d where d.del_flag = '0' order by d.parent_id, d.order_num
2022-02-14 10:53:04 [http-nio-8080-exec-3] DEBUG c.yunze.system.mapper.SysDeptMapper.selectDeptList --> ==> Parameters: 
2022-02-14 10:53:04 [http-nio-8080-exec-3] DEBUG c.yunze.system.mapper.SysDeptMapper.selectDeptList --> <==      Total: 1
2022-02-14 10:53:04 [http-nio-8080-exec-1] DEBUG c.y.c.mapper.yunze.YzCardMapper.getCardGrouping --> ==>  Preparing: SELECT customize_grouping FROM yz_card_info WHERE ISNULL(customize_grouping )= 0 AND LENGTH( trim( customize_grouping ))> 0 GROUP BY customize_grouping
2022-02-14 10:53:04 [http-nio-8080-exec-1] DEBUG c.y.c.mapper.yunze.YzCardMapper.getCardGrouping --> ==> Parameters: 
2022-02-14 10:53:04 [http-nio-8080-exec-1] DEBUG c.y.c.mapper.yunze.YzCardMapper.getCardGrouping --> <==      Total: 0
2022-02-14 10:53:04 [http-nio-8080-exec-2] DEBUG c.y.common.mapper.yunze.YzCardMapper.selMapCount --> ==>  Preparing: SELECT COUNT(iccid) FROM yz_card_info
2022-02-14 10:53:04 [http-nio-8080-exec-2] DEBUG c.y.common.mapper.yunze.YzCardMapper.selMapCount --> ==> Parameters: 
2022-02-14 10:53:04 [http-nio-8080-exec-2] DEBUG c.y.common.mapper.yunze.YzCardMapper.selMapCount --> <==      Total: 1
2022-02-14 10:53:04 [http-nio-8080-exec-2] DEBUG com.yunze.common.mapper.yunze.YzCardMapper.selMap --> ==>  Preparing: SELECT id, vid, msisdn, iccid, imsi, open_date, activate_date, agent_id, channel_id, DATE_FORMAT( batch_date, "%Y-%m-%d" ) AS batch_date, DATE_FORMAT( syn_Time, "%Y-%m-%d %H:%i:%S" ) AS syn_Time, remarks, status_id, status_ShowId, package_id, used, customize_grouping, DATE_FORMAT( deliver_date, "%Y-%m-%d" ) AS deliver_date, DATE_FORMAT( due_expire_time, "%Y-%m-%d" ) AS due_expire_time ,remind_ratio, virtual_ratio, del_flag, connection_status, is_Disconnected FROM yz_card_info LIMIT ?,?
2022-02-14 10:53:04 [http-nio-8080-exec-2] DEBUG com.yunze.common.mapper.yunze.YzCardMapper.selMap --> ==> Parameters: 0(Integer), 10(Integer)
2022-02-14 10:53:04 [http-nio-8080-exec-2] DEBUG com.yunze.common.mapper.yunze.YzCardMapper.selMap --> <==      Total: 1
2022-02-14 10:53:05 [http-nio-8080-exec-27] DEBUG c.yunze.apiCommon.mapper.YzCardRouteMapper.find_cr --> ==>  Preparing: SELECT cd_id AS 'dictValue', CONCAT( cd_alias , "-",cd_name ) AS 'dictLabel' FROM yz_card_route WHERE cd_status = 1 ORDER BY dictLabel ASC, cd_id
2022-02-14 10:53:05 [http-nio-8080-exec-27] DEBUG c.yunze.apiCommon.mapper.YzCardRouteMapper.find_cr --> ==> Parameters: 
2022-02-14 10:53:05 [http-nio-8080-exec-27] DEBUG c.yunze.apiCommon.mapper.YzCardRouteMapper.find_cr --> <==      Total: 1
2022-02-14 10:53:39 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 170425
2022-02-14 10:55:00 [RuoyiScheduler_Worker-10] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 10:55:00 [RuoyiScheduler_Worker-10] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 10:55:01 [RuoyiScheduler_Worker-10] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type != ?
2022-02-14 10:55:01 [RuoyiScheduler_Worker-10] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 10:55:01 [RuoyiScheduler_Worker-10] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 10:55:01 [RuoyiScheduler_Worker-10] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 10:55:01 [RuoyiScheduler_Worker-10] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.addPackageProduction(180)(String), 除 生效类型为 [激活生效] 外 所有加包 增加到生产任务中去 总共耗时：339毫秒(String), 0(String)
2022-02-14 10:55:01 [RuoyiScheduler_Worker-10] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 10:55:01 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 82091
2022-02-14 10:59:27 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_MisfireHandler] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 265763
2022-02-14 11:00:00 [RuoyiScheduler_Worker-11] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==>  Preparing: update yz_order SET add_package = 1 WHERE id in ( SELECT b.id FROM yz_card_flow a, yz_order b where a.ord_no = b.ord_no and a.iccid = b.iccid and b.add_package = 0 )
2022-02-14 11:00:00 [RuoyiScheduler_Worker-11] DEBUG c.y.common.mapper.yunze.YzOrderMapper.updAutomatic --> ==> Parameters: 
2022-02-14 11:00:00 [RuoyiScheduler_Worker-11] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==>  Preparing: SELECT a.id, a.ord_no, a.iccid, a.add_parameter, a.validate_type, DATE_FORMAT( a.create_time, "%Y-%m-%d %H:%i:%S" ) AS create_time, b.id as Bid, b.activate_date FROM yz_order a, yz_card_info b WHERE a.ord_type = 2 and a.status = 1 and a.add_package = 0 and a.iccid = b.iccid AND a.validate_type = ? and b.activate_date <= now()
2022-02-14 11:00:00 [RuoyiScheduler_Worker-11] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> ==> Parameters: 4(String)
2022-02-14 11:00:00 [RuoyiScheduler_Worker-11] DEBUG c.y.c.mapper.yunze.YzOrderMapper.findAddPackage --> <==      Total: 0
2022-02-14 11:00:00 [RuoyiScheduler_Worker-11] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==>  Preparing: insert into sys_job_log( job_name, job_group, invoke_target, job_message, status, create_time )values( ?, ?, ?, ?, ?, sysdate() )
2022-02-14 11:00:00 [RuoyiScheduler_Worker-11] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> ==> Parameters: 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去(String), POLLING(String), orderAddPackageProductionTask.activationAddPackageProductionAndActivateDate(180)(String), 生效类型为 [激活生效] 且 已有生效时间 增加到生产任务中去 总共耗时：78毫秒(String), 0(String)
2022-02-14 11:00:00 [RuoyiScheduler_Worker-11] DEBUG c.yunze.quartz.mapper.SysJobLogMapper.insertJobLog --> <==    Updates: 1
2022-02-14 11:09:27 [RuoyiScheduler_QuartzSchedulerThread] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 540062
2022-02-14 11:11:15 [QuartzScheduler_RuoyiScheduler-Dell1644568849929_ClusterManager] WARN  com.alibaba.druid.pool.DruidAbstractDataSource --> discard long time none received connection. , jdbcUrl : jdbc:mysql://124.70.180.152/iotdb?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8, version : 1.2.8, lastPacketReceivedIdleMillis : 107815
2022-02-14 11:14:08 [SpringContextShutdownHook] INFO  org.quartz.core.QuartzScheduler --> Scheduler RuoyiScheduler_$_Dell1644568849929 paused.
2022-02-14 11:14:09 [SpringContextShutdownHook] INFO  org.quartz.core.QuartzScheduler --> Scheduler RuoyiScheduler_$_Dell1644568849929 shutting down.
2022-02-14 11:14:09 [SpringContextShutdownHook] INFO  org.quartz.core.QuartzScheduler --> Scheduler RuoyiScheduler_$_Dell1644568849929 paused.
2022-02-14 11:14:09 [SpringContextShutdownHook] INFO  org.quartz.core.QuartzScheduler --> Scheduler RuoyiScheduler_$_Dell1644568849929 shutdown complete.
2022-02-14 11:14:09 [SpringContextShutdownHook] INFO  sys-user --> ====关闭后台任务任务线程池====
2022-02-14 11:14:09 [SpringContextShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource --> {dataSource-1} closing ...
2022-02-14 11:14:09 [SpringContextShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource --> {dataSource-1} closed
